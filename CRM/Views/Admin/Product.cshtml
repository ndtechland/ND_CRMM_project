@model CRM.Models.Crm.ProductMaster


@{
    ViewData["Title"] = "Product";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<div class="page-wrapper">
    <div class="page-body-wrapper">
        <div class="page-sidebar">
        </div>
        <!-- Page Sidebar Ends-->
        <!-- Right sidebar Start-->
        <!-- Right sidebar Ends-->

        <div class="page-body">

            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="page-header">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="page-header-left">
                                <h2>
                                    Add Product
                                </h2>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <ol class="breadcrumb pull-right">
                                <li class="breadcrumb-item"><a href="/Home/Dashboard"><i data-feather="home"></i></a></li>
                                <li class="breadcrumb-item">Product</li>
                                <li class="breadcrumb-item active">Add Product</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Container-fluid Ends-->
            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="row">

                    <div class="col-sm-12">
                        <div class="card">                           
                            <div class="card-body">
                                <form class="needs-validation" asp-action="Product" autocomplete="off">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Category<span>*</span></label>
                                            @Html.DropDownListFor(model => model.Category, new SelectList(ViewBag.Category, "Value", "Text"), "-- Select Category -- ", new { @class = "form-control",onchange = "validateCategory(this)",oninvalid="this.setCustomValidity('Please select Category')" ,oninput="this.setCustomValidity('')",required="required"})
                                            <span asp-validation-for="Category" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Product Name<span>*</span></label>
                                            <input class="form-control" name="ProductName" placeholder="ProductName" type="text" required="" oninvalid="this.setCustomValidity('Please Enter ProductName')" oninput="this.setCustomValidity('')">
                                            <span asp-validation-for="ProductName" class="text-danger"></span>
                                        </div>
                                        
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Price<span>*</span></label>
                                            <input class="form-control" placeholder="Price" name="Price" type="text" required="" oninvalid="this.setCustomValidity('Please Enter Price')" oninput="this.setCustomValidity('')" onkeydown="validateNumericInput(event)">
                                            <span asp-validation-for="Price" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">HSN Code<span>*</span></label>
                                            <input class="form-control" name="HsnSacCode" type="text" placeholder="HSNCode" maxlength="6" minlength="6" required="" oninvalid="this.setCustomValidity('Please Enter HSNCode')" oninput="this.setCustomValidity('')" onkeydown="validateNumericInput(event)">
                                            <span asp-validation-for="HsnSacCode" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-sm-6">
                                            <label for="validationCustom0">GST</label>
                                            @Html.DropDownListFor(model => model.Gst, new SelectList(ViewBag.Gst, "Value", "Text"), "-- Select Gst -- ", new { @class = "form-control",onchange = "validateGst(this)",oninvalid="this.setCustomValidity('Please select Gst')" ,oninput="this.setCustomValidity('')",required="required"})
                                            <span asp-validation-for="Gst" class="text-danger"></span>
                                        </div>
                              
                                    </div>
                                    <div class="form-button" style="display:flex; justify-content:center;">
                                        <input type="submit" id="btnsubmit" class="btn btn-primary" value="Submit" />
                                    </div>                                
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>


    </div>

</div>

<script>
    function validateCategory(selectElement) {
        if (selectElement.value === "") {
            selectElement.setCustomValidity('Please select Category');
        } else {
            selectElement.setCustomValidity('');
        }
    }
    function validateNumericInput(event) {
        if ([46, 8, 9, 27, 13].indexOf(event.keyCode) !== -1 ||
            (event.keyCode == 65 && event.ctrlKey === true) ||
            (event.keyCode >= 35 && event.keyCode <= 39)) {
            return;
        }
        if ((event.shiftKey || (event.keyCode < 48 || event.keyCode > 57)) && (event.keyCode < 96 || event.keyCode > 105)) {
            event.preventDefault();
        }

    }
</script>
<script>
    function validateGst(selectElement) {
        if (selectElement.value === "") {
            selectElement.setCustomValidity('Please select GST');
        } else {
            selectElement.setCustomValidity('');
        }
    }
</script>



