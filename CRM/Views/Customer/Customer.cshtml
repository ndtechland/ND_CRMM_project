@model CRM.Models.DTO.Customer

@{
    ViewData["Title"] = "Customer";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var message = "@TempData["Message"]";
        if (message == "ok" || message == "dltok" || message == "updok") {
            if (message) {
                let alertText;

                if (message == "dltok") {
                    alertText = "Deleted successfully.";
                } else if (message == "updok") {
                    alertText = "Customer updated successfully.";
                } else {
                    alertText = "Customer added successfully.";
                }

                Swal.fire({
                    title: 'Success',
                    text: alertText,
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        setTimeout(function () {
                            window.location.href = '@Url.Action("CustomerList", "Customer")';
                        }, 1000);
                    }
                });
            }
        }
        else {
            if (message) {
                Swal.fire({
                    title: 'Failed',
                    text: message,
                    icon: 'error',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        setTimeout(function () {
                            window.location.href = '@Url.Action("CustomerList", "Customer")';
                        }, 1000);
                    }
                });
            }
        } 
    });
</script>

<div class="page-wrapper">
    <div class="page-body-wrapper">
        <div class="page-sidebar">
        </div>

        <div class="page-body">

            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="page-header">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="page-header-left">
                                <h2>
                                    @ViewBag.Heading
                                </h2>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <ol class="breadcrumb pull-right">
                                <li class="breadcrumb-item"><a href="/Home/Dashboard"><i data-feather="home"></i></a></li>
                                <li class="breadcrumb-item">CRM</li>
                                <li class="breadcrumb-item active">Customer</li>
                                <li class="breadcrumb-item active">Customer Registration</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Container-fluid Ends-->
            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <form asp-action="Customer" method="post" autocomplete="off">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    @Html.TextBoxFor(Model => Model.Id, new { @class = "from-control", type = "hidden" })
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">First Name </label>
                                            <input asp-for="FirstName" id="FirstName" placeholder="Enter FirstName" class="form-control" />
                                            <span asp-validation-for="FirstName" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Last Name </label>
                                            <input asp-for="LastName" id="LastName" class="form-control" placeholder="Enter LastName"/>
                                            <span asp-validation-for="LastName" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Company Name <span class="text-danger">*</span></label>
                                            <input asp-for="CompanyName" id="CompanyName" placeholder="Enter CompanyName" class="form-control" required="" oninvalid="this.setCustomValidity('Please Enter CompanyName')" oninput="this.setCustomValidity('')" />
                                            <span asp-validation-for="CompanyName" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Address <span class="text-danger">*</span></label>
                                            <input asp-for="Location" id="address" class="form-control" placeholder="Enter Address" required="" />
                                            <span asp-validation-for="Location" class="text-danger"></span>
                                        </div>
                                       
                                         

                                    </div>
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label class="control-label">Country<span class="text-danger">*</span></label>
                                            <div class="dropdown-container position-relative">
                                                <select class="form-control" asp-for="Countryid" asp-items="@ViewBag.Countriesitems" id="ddlCountry">
                                                    <option value="">-- Select Country --</option>
                                                </select>
                                                <i class="dropdown-icon fa fa-caret-down position-absolute"></i>
                                            </div>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label class="control-label">State Name <span class="text-danger">*</span></label>
                                            <div class="dropdown-container position-relative">
                                                <select class="form-control" asp-for="StateId"  asp-items="@ViewBag.StateItems" id="ddlState">
                                                    <option value="">-- Select State --</option>
                                                </select>
                                                <i class="dropdown-icon fa fa-caret-down position-absolute"></i>
                                            </div>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">City Name <span class="text-danger">*</span></label>
                                            <div class="dropdown-container position-relative">
                                            <select asp-for="CityId" class="form-control" id="ddlCityid" required>
                                                <option value="">-- Select City --</option>
                                            </select>
                                                <i class="dropdown-icon fa fa-caret-down position-absolute"></i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Mobile Number <span class="text-danger">*</span></label>
                                            <div class="input-group">
                                                <select class="form-select" id="countryCode" name="countryCode" onchange="updateMobileCode()" style="height:50px ;width:50px;">
                                                    <option value="+91" selected>🇮🇳 +91 (India)</option>
                                                    <option value="+1">🇺🇸 +1 (USA)</option>
                                                    <option value="+44">🇬🇧 +44 (UK)</option>
                                                    <option value="+61">🇦🇺 +61 (Australia)</option>
                                                    <option value="+81">🇯🇵 +81 (Japan)</option>
                                                    <option value="+49">🇩🇪 +49 (Germany)</option>
                                                    <option value="+33">🇫🇷 +33 (France)</option>
                                                    <option value="+971">🇦🇪 +971 (UAE)</option>
                                                    <option value="+92">🇵🇰 +92 (Pakistan)</option>
                                                    <option value="+880">🇧🇩 +880 (Bangladesh)</option>
                                                    <option value="+86">🇨🇳 +86 (China)</option>
                                                    <option value="+7">🇷🇺 +7 (Russia)</option>
                                                    <option value="+55">🇧🇷 +55 (Brazil)</option>
                                                    <option value="+27">🇿🇦 +27 (South Africa)</option>
                                                    <option value="+234">🇳🇬 +234 (Nigeria)</option>
                                                    <option value="+93">🇦🇫 +93 (Afghanistan)</option>
                                                    <option value="+20">🇪🇬 +20 (Egypt)</option>
                                                    <option value="+62">🇮🇩 +62 (Indonesia)</option>
                                                    <option value="+60">🇲🇾 +60 (Malaysia)</option>
                                                    <option value="+63">🇵🇭 +63 (Philippines)</option>
                                                </select>
                                                <input type="tel" asp-for="MobileNumber" id="MobileNumber" placeholder="Enter Mobile Number" class="form-control" minlength="10" maxlength="15" required="" oninvalid="this.setCustomValidity('Please Enter Mobile Number')" oninput="this.setCustomValidity('')" autocomplete="off" />
                                            </div>
                                            <span asp-validation-for="MobileNumber" class="text-danger"></span>
                                        </div>

                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Alternate Number</label>
                                            <div class="input-group">
                                                <select class="form-select" id="alternateCountryCode" name="alternateCountryCode" onchange="updateAlternateMobileCode()">
                                                    <option value="+91" selected>🇮🇳 +91 (India)</option>
                                                    <option value="+1">🇺🇸 +1 (USA)</option>
                                                    <option value="+44">🇬🇧 +44 (UK)</option>
                                                    <option value="+61">🇦🇺 +61 (Australia)</option>
                                                    <option value="+81">🇯🇵 +81 (Japan)</option>
                                                    <option value="+49">🇩🇪 +49 (Germany)</option>
                                                    <option value="+33">🇫🇷 +33 (France)</option>
                                                    <option value="+971">🇦🇪 +971 (UAE)</option>
                                                    <option value="+92">🇵🇰 +92 (Pakistan)</option>
                                                    <option value="+880">🇧🇩 +880 (Bangladesh)</option>
                                                    <option value="+86">🇨🇳 +86 (China)</option>
                                                    <option value="+7">🇷🇺 +7 (Russia)</option>
                                                    <option value="+55">🇧🇷 +55 (Brazil)</option>
                                                    <option value="+27">🇿🇦 +27 (South Africa)</option>
                                                    <option value="+234">🇳🇬 +234 (Nigeria)</option>
                                                    <option value="+93">🇦🇫 +93 (Afghanistan)</option>
                                                    <option value="+20">🇪🇬 +20 (Egypt)</option>
                                                    <option value="+62">🇮🇩 +62 (Indonesia)</option>
                                                    <option value="+60">🇲🇾 +60 (Malaysia)</option>
                                                    <option value="+63">🇵🇭 +63 (Philippines)</option>
                                                </select>
                                                <input type="tel" asp-for="AlternateNumber" id="AlternateNumber" placeholder="Enter Alternate Number" class="form-control" minlength="10" maxlength="15" autocomplete="off" />
                                            </div>
                                            <span asp-validation-for="AlternateNumber" class="text-danger"></span>
                                        </div>

                                    </div>
                                    <div class="row">

                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Email <span class="text-danger">*</span></label>
                                            <input type="email" asp-for="Email" placeholder="Enter Email" class="form-control" required="" oninvalid="this.setCustomValidity('Please Enter Email')" oninput="this.setCustomValidity('')" />
                                            <span asp-validation-for="Email" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">GST Number</label>
                                            <input asp-for="GstNumber" id="GstNumber" class="form-control" placeholder="Enter GstNumber" maxlength="15" minlength="15" />
                                        </div>
                                    </div>

                                    <div class="form-group col-sm">
                                        <label for="sameAsCompanyAddress">
                                            <input type="checkbox" id="sameAsCompanyAddress" name="IsSameAddress" value="true" class="Activechecked" onclick="copyAddress()"> Same as Company Address
                                        </label>
                                    </div>

                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Billing Address <span class="text-danger">*</span></label>
                                            <input asp-for="BillingAddress" id="BillingAddress" placeholder="Enter BillingAddress" class="form-control" required="" oninvalid="this.setCustomValidity('Please Enter BillingAddress')" oninput="this.setCustomValidity('')" />
                                            <span asp-validation-for="BillingAddress" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label class="control-label">Country <span class="text-danger">*</span></label>
                                            <div class="dropdown-container position-relative">
                                                <select class="form-control" asp-items="@ViewBag.Countriesitems" id="Countryid">
                                                    <option value="">-- Select Country --</option>
                                                </select>
                                                <i class="dropdown-icon fa fa-caret-down position-absolute"></i>
                                            </div>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">State <span class="text-danger">*</span></label>
                                            <div class="dropdown-container position-relative">
                                            <select asp-for="BillingStateId" asp-items="@ViewBag.StateItems" id="stateid" class="form-control" required>
                                                <option value="">-- Select State --</option>
                                            </select>
                                                <i class="dropdown-icon fa fa-caret-down position-absolute"></i>
                                            </div>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">City <span class="text-danger">*</span></label>
                                            <div class="dropdown-container position-relative">
                                            <select asp-for="BillingCityId" class="form-control" id="districtid" required>
                                                <option value="">-- Select City --</option>
                                            </select>
                                                <i class="dropdown-icon fa fa-caret-down position-absolute"></i>
                                            </div>
                                        </div>
                                        @* <div class="form-group col-sm">
                                            <label for="validationCustom0">Product Details <span class="text-danger">*</span></label>

                                            @Html.DropDownListFor(model => model.ProductDetails, new SelectList(ViewBag.ProductDetails, "Value", "Text"), "-- Select Product --", new { @class = "form-control", onchange = "onProductChange()", required = "required", oninvalid = "this.setCustomValidity('Please select ProductDetails')", oninput = "this.setCustomValidity('')" })

                                            <span asp-validation-for="ProductDetails" class="text-danger"></span>
                                        </div> *@
                                    </div>
                                   @*  <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Price <span class="text-danger">*</span></label>
                                            <input class="form-control" name="productprice" placeholder="00.0" id="Price" type="text" readonly>
                                            <span asp-validation-for="productprice" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Renew Price <span class="text-danger">*</span></label>
                                            <input class="form-control" name="Renewprice" value="@ViewBag.Renewprice" value="@ViewBag.Renewprice" id="Renewprice" type="text" onkeydown="validateNumericInput(event)">
                                            <span asp-validation-for="Renewprice" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Number Of Renew Month <span class="text-danger">*</span></label>
                                            <input class="form-control" name="NoOfRenewMonth" value="@ViewBag.NoOfRenewMonth" placeholder="1" value="@ViewBag.NoOfRenewMonth" id="NoOfRenewMonth" type="text" onkeydown="validateNumericInput(event)" maxlength="2">
                                            <span asp-validation-for="NoOfRenewMonth" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">HSN Code</label>
                                            <input type="text" asp-for="HsnSacCode" id="HsnSacCode" placeholder="HsnSacCode" class="form-control" readonly />
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Start Date <span class="text-danger">*</span></label>
                                            <input name="StartDate" type="date" id="StartDate" class="form-control text-box single-line" required="" oninvalid="this.setCustomValidity('Please select StartDate')" oninput="this.setCustomValidity('')" value="@ViewBag.startDate" />
                                            <span asp-validation-for="StartDate" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Renew Date <span class="text-danger">*</span></label>
                                            <input name="RenewDate" type="date" id="RenewDate" class="form-control" required="" readonly="readonly" oninvalid="this.setCustomValidity('Please select RenewDate')" oninput="this.setCustomValidity('')" value="@ViewBag.renewDate" />
                                            <span asp-validation-for="RenewDate" class="text-danger"></span>
                                        </div>
                                    </div>
                                    

                                    <div class="row">
                                        
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">IGST</label>
                                            <input type="Igst" asp-for="Igst" id="IGST" placeholder="00.0" class="form-control" readonly />
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">SGST</label>
                                            <input type="Scgst" asp-for="Scgst" id="SGST" placeholder="00.0" class="form-control" readonly />
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">CGST</label>
                                            <input type="Cgst" asp-for="Cgst" id="CGST" placeholder="00.0" class="form-control" readonly />
                                        </div>
                                    </div> *@

                                    <div class="form-group" style="display:flex; justify-content:center;">
                                        <input type="submit" value="@ViewBag.btnText" class="btn btn-primary" />
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>
    <input hidden type="text" id="iGST" value="" />
    <input hidden type="text" id="cGST" value="" />
    <input hidden type="text" id="sGST" value="" />
    <input hidden type="text" id="hsnSacCode" value="" />
    <input hidden type="text" id="price" value="" />
    <input hidden type="text" id="stateid" />
    <input type="hidden" id="cityId" />
</div>
<!-- Add this in the head section of your HTML -->


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.2.1/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/js/select2.min.js" defer></script>







 


@* for company city *@
<script type="text/javascript">
  $(document).ready(function () {
    var selectedCountryId = '@Html.Raw(ViewBag.SelectedCountryid ?? "null")';
    var selectedStateId = '@Html.Raw(ViewBag.SelectedStateId ?? "null")';
    var selectedDistrictId = '@Html.Raw(ViewBag.SelectedCityId ?? "null")';

    function loadStates(countryId, selectedStateId = null, callback = null) {
        if (!countryId || countryId === "null") return;

        $.ajax({
            url: '@Url.Action("GetstatebyCountryId", "Customer")',
            type: "GET",
            data: { Countryid: countryId },
            success: function (data) {
                var $ddlState = $('#ddlState').empty().append('<option value="">-- Select State --</option>');
                $.each(data, function (index, item) {
                    $ddlState.append(`<option value="${item.id}" ${selectedStateId == item.id ? 'selected' : ''}>${item.name}</option>`);
                });

                if (selectedStateId && selectedStateId !== "null") {
                    $ddlState.val(selectedStateId).trigger('change');
                    if (callback) callback();
                }
            },
            error: function () {
                console.error('Failed to load states.');
            }
        });
    }

    function loadDistricts(stateId, selectedDistrictId = null) {
        if (!stateId || stateId === "null") return;

        $.ajax({
            url: '@Url.Action("GetCityByStateId", "Customer")',
            type: "GET",
            data: { stateId: stateId },
            success: function (data) {
                var $ddlCity = $('#ddlCityid').empty().append('<option value="">-- Select City --</option>');
                $.each(data, function (index, item) {
                    $ddlCity.append(`<option value="${item.id}" ${selectedDistrictId == item.id ? 'selected' : ''}>${item.name}</option>`);
                });

                if (selectedDistrictId && selectedDistrictId !== "null") {
                    $ddlCity.val(selectedDistrictId);
                }
            },
            error: function () {
                console.error('Failed to load cities.');
            }
        });
    }

    // Load states and then load cities
    if (selectedCountryId !== "null") {
        loadStates(selectedCountryId, selectedStateId, function () {
            if (selectedStateId !== "null") {
                loadDistricts(selectedStateId, selectedDistrictId);
            }
        });
    }

    $('#ddlCountry').change(function () {
        var countryId = $(this).val();
        if (countryId) {
            loadStates(countryId);
        } else {
            $('#ddlState, #ddlCityid').empty().append('<option value="">-- Select --</option>');
        }
    });

    $('#ddlState').change(function () {
        var stateId = $(this).val();
        if (stateId) {
            loadDistricts(stateId);
        } else {
            $('#ddlCityid').empty().append('<option value="">-- Select City --</option>');
        }
    });
});


</script>
@* <script type="text/javascript">
    $(document).ready(function () {
        // Store DistrictId from the view for edit time
        var selectedDistrictId = '@Html.Raw(ViewBag.SelectedCityId ?? "null")'; // Fetch DistrictId, use null if not set
        // Check if stateId is already set (useful for edit scenario)
        var stateId = $('#ddlState').val();
        if (stateId) {
            loadDistricts(stateId, selectedDistrictId); // Pass selectedDistrictId for edit time
        }

        $('#ddlState').change(function () {
            var stateId = $(this).val();
            if (stateId) {
                loadDistricts(stateId); // On change, no need to pass selectedDistrictId
            } else {
                $('#ddlCityid').empty();
                $('#ddlCityid').append('<option value="">--Select City--</option>');
            }
        });

        // Function to load districts based on selected state
        function loadDistricts(stateId, selectedDistrictId = null) {
            $.ajax({
                url: '@Url.Action("GetCityByStateId", "Customer")',
                type: "GET",
                data: { stateId: stateId },
                success: function (data) {
                    $('#ddlCityid').empty();
                    $('#ddlCityid').append('<option value="">--Select City--</option>');

                    $.each(data, function (index, item) {
                        var isSelected = selectedDistrictId && item.id == selectedDistrictId ? 'selected' : '';
                        $('#ddlCityid').append('<option value="' + item.id + '" ' + isSelected + '>' + item.name + '</option>');
                    });

                    // If district is pre-selected (edit mode), ensure it is selected in the dropdown
                    if (selectedDistrictId) {
                        $('#ddlCityid').val(selectedDistrictId); // Set the selected district in case it wasn't set correctly by "selected" attribute
                    }
                },
                error: function () {
                    console.error('Failed to load districts.');
                }
            });
        }
    });
</script>
 *@
@* for billing city *@
<script type="text/javascript">
    $(document).ready(function () {
        // Store DistrictId from the view for edit time
        var selectedDistrictId = '@Html.Raw(ViewBag.BillingCityId ?? "null")'; // Fetch DistrictId, use null if not set
        // Check if stateId is already set (useful for edit scenario)
        var stateId = $('#stateid').val();
        $("#stateid").trigger('change');
        if (stateId) {
            loadDistricts(stateId, selectedDistrictId); // Pass selectedDistrictId for edit time
        }

        $('#stateid').change(function () {
            var stateId = $(this).val();
            if (stateId) {
                loadDistricts(stateId); // On change, no need to pass selectedDistrictId
            } else {
                $('#districtid').empty();
                $('#districtid').append('<option value="">--Select City--</option>');
            }
        });

        // Function to load districts based on selected state
        function loadDistricts(stateId, selectedDistrictId = null) {
            $.ajax({
                url: '@Url.Action("GetCityByStateId", "Customer")',
                type: "GET",
                data: { stateId: stateId },
                success: function (data) {
                    $('#districtid').empty();
                    $('#districtid').append('<option value="">--Select City--</option>');

                    $.each(data, function (index, item) {
                        var isSelected = selectedDistrictId && item.id == selectedDistrictId ? 'selected' : '';
                        $('#districtid').append('<option value="' + item.id + '" ' + isSelected + '>' + item.name + '</option>');
                    });

                    // If district is pre-selected (edit mode), ensure it is selected in the dropdown
                    if (selectedDistrictId) {
                        $('#districtid').val(selectedDistrictId); // Set the selected district in case it wasn't set correctly by "selected" attribute
                    }
                },
                error: function () {
                    console.error('Failed to load districts.');
                }
            });
        }
    });
</script>

@* for auto selected details same as company address *@
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const checkbox = document.getElementById('sameAsCompanyAddress');

        // Add event listeners for the checkbox and input fields
        checkbox.addEventListener('change', copyAddress);
        document.getElementById('address').addEventListener('input', copyAddress);
        document.getElementById('ddlState').addEventListener('change', copyAddress);
        document.getElementById('ddlCityid').addEventListener('change', copyAddress);
        document.getElementById('ddlCountry').addEventListener('change', copyAddress);
    });

    function copyAddress() {
        const checkbox = document.getElementById('sameAsCompanyAddress');
        const companyAddress = document.getElementById('address').value;
        const companyState = document.getElementById('ddlState').value;
        const companyCity = document.getElementById('ddlCityid').value;
        const companyCountry = document.getElementById('ddlCountry').value;

        const billingAddress = document.getElementById('BillingAddress');
        const billingState = document.getElementById('stateid');
        const billingCity = document.getElementById('districtid');
        const billingCountry = document.getElementById('Countryid');

        if (checkbox.checked) {
            billingAddress.value = companyAddress;
            billingState.value = companyState;
            billingCountry.value = companyCountry;

            // Trigger change event to populate city dropdown
            billingState.dispatchEvent(new Event('change'));

            // Use a timeout to wait for the city dropdown to be populated
            setTimeout(() => {
                billingCity.value = companyCity;
            }, 500); // Adjust the delay if needed

            billingAddress.readOnly = true;

            $("#stateid").css("pointer-events", "none");
            $("#stateid").css("background-color", "#e9ecef");

             $("#Countryid").css("pointer-events", "none");
            $("#Countryid").css("background-color", "#e9ecef");


            // $("#districtid").css("opacity", "0.5");
            $("#districtid").css("pointer-events", "none");
            $("#districtid").css("background-color", "#e9ecef");
            billingCity.disabled = false; // Keep city dropdown enabled
        } else {
            billingAddress.readOnly = false;

            $("#stateid").css("pointer-events", "auto");
            $("#stateid").css("background-color", "#FFFFFF");

             $("#Countryid").css("pointer-events", "auto");
            $("#Countryid").css("background-color", "#FFFFFF");


            $("#districtid").css("pointer-events", "auto");
            $("#districtid").css("background-color", "#FFFFFF");


            billingAddress.value = ''; // Clear billing address fields
            billingState.value = '';
            billingCity.value = '';
            billingCountry.value = '';
        }
    }
</script>

@* Gst *@
<script>
    $(document).ready(function () {
        // Call updateTaxFields on page load if a product is already selected
        if ($("#ProductDetails").val()) {
            updateTaxFields();
        }

        // Event listener for product change
        $("#ProductDetails").change(function () {
            updateTaxFields();
        });

        // Event listener for state change
        $("#stateid").change(function () {
            updateTaxFields();
        });
    });

    function updateTaxFields() {
        var productId = $("#ProductDetails").val();
        var stateId = $("#stateid").val();

        if (!productId) {
            // If no product is selected, clear the fields and return
            clearTaxFields();
            return;
        }

        $.ajax({
            url: '/Home/product?id=' + productId,
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                if (response.data != null) {
                    $('#HsnSacCode').val(response.data.hsnSacCode);
                    $('#Price').val(response.data.price);

                    // Check if the selected state is Same state
                    if ('@ViewBag.checkvendorbillingstateid' === stateId) {
                        $('#CGST').val(response.data.cgst);
                        $('#SGST').val(response.data.scgst);
                        $('#IGST').val(''); // Clear IGST
                    } else {
                        $('#IGST').val(response.data.igst);
                        $('#CGST').val(''); // Clear CGST
                        $('#SGST').val(''); // Clear SGST
                    }
                } else {
                    // Clear all fields if no data is found
                    clearTaxFields();
                }
            },
            error: function () {
                alert('Error fetching data');
                clearTaxFields();       }
        });
    }

    function clearTaxFields() {
        $('#CGST').val('');
        $('#SGST').val('');
        $('#HsnSacCode').val('');
        $('#Price').val('');
        $('#IGST').val('');
    }

    function validateNumericInput(event) {
        if ([67, 86, 88].includes(event.keyCode) && (event.ctrlKey || event.metaKey) ||
            [32, 46, 8, 9, 27, 13].includes(event.keyCode) ||
            (event.keyCode >= 35 && event.keyCode <= 39)) return;

        if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105)) return;
        event.preventDefault();
    }

    // Disable right-click menu
    document.addEventListener('contextmenu', e => e.preventDefault());

    // Usage example
    document.getElementById("yourInputField").addEventListener("keydown", validateNumericInput);

    function ValidateGST() {
        var Obj = document.getElementById("GstNumber");
        if (Obj.value != "") {
            var ObjVal = Obj.value;
            var gstPat = /^([0-9]{2}[a-zA-Z]{4}([a-zA-Z]{1}|[0-9]{1})[0-9]{4}[a-zA-Z]{1}([a-zA-Z]|[0-9]){3}){0,15}$/;
            if (ObjVal.search(gstPat) == -1) {
                swal("Invalid GstNumber. It should be in this format: 11AAAAA1111Z1");
                Obj.value = '';
                return false;
            }
        }
    }
</script>


@* autoselect renew date base on renew month and startdate *@
<script>
    function calculateRenewDate() {
        const renewMonth = parseInt(document.getElementById('NoOfRenewMonth').value);
        const startDate = document.getElementById('StartDate').value;

        if (renewMonth && startDate) {
            const start = new Date(startDate);
            start.setMonth(start.getMonth() + renewMonth); // Add the inputted number of months

            // Format date as YYYY-MM-DD
            const formattedDate = start.toISOString().split('T')[0];

            document.getElementById('RenewDate').value = formattedDate;
        }
    }

    // Event listeners for both Start Date and Number Of Renew Month fields
    document.getElementById('NoOfRenewMonth').addEventListener('input', calculateRenewDate);
    document.getElementById('StartDate').addEventListener('input', calculateRenewDate);
</script>


@*  for checkbox *@
<script>
    if ('@ViewBag.CheckIsSameAddress' == 'True') {
        document.addEventListener("DOMContentLoaded", function (event) {
            setTimeout(check, 1000);
            function check() {
                $('.Activechecked').trigger('click')
                $('.Activechecked').attr('checked', true);
            }
        });
    }
    else {
        document.addEventListener("DOMContentLoaded", function (event) {
            $('.Activechecked').attr('checked', false);
        });
    }
</script>


<script>
    function updateMobileCode() {
        var countryCode = document.getElementById("countryCode").value;
        var mobileInput = document.getElementById("MobileNumber");

        // Remove existing country code if already present
        var existingValue = mobileInput.value;
        var regex = /^\+\d+\s?/; // Regex to match country code in the input field
        existingValue = existingValue.replace(regex, ""); // Remove existing country code

        // Add the selected country code
        mobileInput.value = countryCode + " " + existingValue;
    }

    // Function to pre-select the correct country code on edit
    function setSelectedCountryCode() {
        var mobileInput = document.getElementById("MobileNumber").value.trim();
        var countryCodeSelect = document.getElementById("countryCode");
        var regex = /^(\+\d+)\s?/; // Extract country code

        var match = mobileInput.match(regex);
        if (match) {
            var countryCode = match[1]; // Extracted country code
            countryCodeSelect.value = countryCode; // Set the dropdown
            document.getElementById("MobileNumber").value = mobileInput.replace(regex, "").trim(); // Remove country code from input
        }
    }

    // Call this function when the page loads (for edit scenario)
    document.addEventListener("DOMContentLoaded", setSelectedCountryCode);
</script>

<script>
    function updateAlternateMobileCode() {
        var countryCode = document.getElementById("alternateCountryCode").value;
        var mobileInput = document.getElementById("AlternateNumber");

        // Remove existing country code if already present
        var existingValue = mobileInput.value;
        var regex = /^\+\d+\s?/;  // Regex to match country code in the input field
        existingValue = existingValue.replace(regex, ""); // Remove existing country code

        // Add the selected country code
        mobileInput.value = countryCode + " " + existingValue;
    }

    // Function to pre-select the correct country code on edit
    function setSelectedAlternateCountryCode() {
        var mobileInput = document.getElementById("AlternateNumber").value.trim();
        var countryCodeSelect = document.getElementById("alternateCountryCode");
        var regex = /^(\+\d+)\s?/; // Extract country code

        var match = mobileInput.match(regex);
        if (match) {
            var countryCode = match[1]; // Extracted country code
            countryCodeSelect.value = countryCode; // Set the dropdown
            document.getElementById("AlternateNumber").value = mobileInput.replace(regex, "").trim(); // Remove country code from input
        }
    }

    // Call this function when the page loads (for edit scenario)
    document.addEventListener("DOMContentLoaded", setSelectedAlternateCountryCode);
</script>


