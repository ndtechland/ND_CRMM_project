@model CRM.Models.DTO.SelfassesstmentadminDTO

@{
    ViewData["Title"] = "Assessment";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
    var subTitleList = ViewBag.SubTittleList as List<string> ?? new List<string>();
}
<style>
    .bg-navy {
        background-color: #001f3f !important;
        border-color: darkblue !important;
        color: white !important;
    }

</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.20/summernote-bs5.min.css'>
<style>
    .dataTables_wrapper table.dataTable th {
        background-color: #00baf2 !important;
        padding: 24px 0.75rem !important;
    }
</style>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var message = "@TempData["Message"]";

        if (message == "ok" || message == "dltok" || message == "updok") {
            if (message) {
                let alertText;

                if (message == "dltok") {
                    alertText = "Deleted successfully.";
                } else if (message == "updok") {
                    alertText = "Assessment updated successfully.";
                } else {
                    alertText = "Assessment added successfully.";
                }

                Swal.fire({
                    title: 'Success',
                    text: alertText,
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        setTimeout(function () {
                            window.location.href = '@Url.Action("Assessment", "SelfAssessment")';
                        }, 1000);
                    }
                });
            }
        }
        else {
            if (message) {
                Swal.fire({
                    title: 'Failed',
                    text: message,
                    icon: 'error',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        setTimeout(function () {
                            window.location.href = '@Url.Action("Assessment", "SelfAssessment")';
                        }, 1000);
                    }
                });
            }
        }
    });
</script>
<div class="page-wrapper">
    <div class="page-body-wrapper">
        <div class="page-sidebar">
        </div>

        <div class="page-body">

            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="page-header">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="page-header-left">
                                <h2>
                                 @ViewBag.Heading
                                </h2>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <ol class="breadcrumb pull-right">
                                <li class="breadcrumb-item"><a href="/Home/Dashboard"><i data-feather="home"></i></a></li>
                                <li class="breadcrumb-item">Settings</li>
                                <li class="breadcrumb-item active">Self-Assessment</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Container-fluid Ends-->
            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <form id="assessmentForm" asp-action="/SelfAssessment/Assessment" autocomplete="off" method="post">
                                    <div class="row">
                                        <div class="form-group col-sm-6">
                                            <label class="control-label">Title</label>
                                            <input type="hidden" name="Id" id="Id" value="@ViewBag.id" />
                                            <textarea name="Tittle" id="Tittle" class="form-control" rows="3" required>@ViewBag.Tittle</textarea>
                                            <span name="Tittle" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm-6">
                                            <label class="control-label">SubTitle</label>
                                            <textarea name="SubTittle" id="SubTittle" class="form-control" rows="3" required></textarea>
                                            <span name="SubTittle" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <div class="row align-items-center">
                                        <div class="col-auto">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" id="Ispoint" name="Ispoint" value="true" />
                                                <label class="form-check-label" for="Ispoint">Is Point</label>
                                            </div>
                                        </div>
                                        <div class="col-auto" id="pointNameGroup" style="display: none;">
                                            <label class="control-label">Point Name</label>
                                            <input name="Pointname" id="Pointname" value="@ViewBag.Pointname" class="form-control" />
                                            <span name="Pointname" class="text-danger"></span>
                                        </div>
                                    </div>
                                </form>

                                <div class="form-button" style="display: flex; justify-content: center; gap: 10px;">
                                    <input type="submit" onclick="btnSubmit();" value="@ViewBag.btnText" class="btn btn-primary" />
                                    <button type="button" onclick="btnPrevious();" class="btn btn-secondary">Previous</button>
                                    <button type="button" onclick="btnNext();" class="btn btn-secondary">Next</button>
                                    <button type="button" onclick="btnDelete();" class="btn btn-danger">Delete</button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="container-fluid">
                <div class="row">

                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <div class=" table-responsive">
                                    <table id="datatable" class="table table-responsive">
                                        <thead>
                                            <tr style="background-color: #00baf2;">
                                                <th nowrap>Sl. No.</th>
                                                <th>
                                                    Tittle
                                                </th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                if (Model.SelfAssessmentList.Count() > 0 && Model.SelfAssessmentList.Any())
                                                {
                                                    var groupedData = Model.SelfAssessmentList.GroupBy(x => x.Tittle).ToList();
                                                    var count = 0;
                                                    foreach (var item in Model.SelfAssessmentList)
                                                    {
                                                        count++;
                                                        <tr class="table-row">
                                                            <td>@count</td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.Tittle)
                                                            </td>
                                               
                                                            <td>
                                                                <div>
                                                                    <a href="@Url.Action("Assessment","SelfAssessment",new { Tittle=item.Tittle})" class="fa fa-edit m-2 font-success"></a>
                                                                    <a href="javascript:void(0);" onclick="confirmDelete('@Url.Action("DeleteAssessment", "SelfAssessment", new { id = item.Id })')" class="fa fa-trash font-danger"></a>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                                }

                                            }
                                        </tbody>
                                      
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="pagination-container">
                <ul id="pagination" class="pagination"></ul>
            </div>
        </div>


    </div>

</div>
@* <script>
    document.getElementById('Ispoint').addEventListener('change', function () {
        const pointNameGroup = document.getElementById('pointNameGroup');
        if (this.checked) {
            pointNameGroup.style.display = 'block';
        } else {
            pointNameGroup.style.display = 'none';
        }
    });
</script> *@
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const isPointCheckbox = document.getElementById('Ispoint');
        const pointNameGroup = document.getElementById('pointNameGroup');

        // Serialize ViewBag.Ispoint safely
        const isPointChecked = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Ispoint));
        if (isPointChecked) {
            isPointCheckbox.checked = true;
            pointNameGroup.style.display = 'block';
        } else {
            pointNameGroup.style.display = 'none';
        }

        // Add event listener for checkbox change
        isPointCheckbox.addEventListener('change', function () {
            if (this.checked) {
                pointNameGroup.style.display = 'block';
            } else {
                pointNameGroup.style.display = 'none';
            }
        });
    });
</script>

<script>
         var subTitleList = @Html.Raw(Json.Serialize(subTitleList));
    var currentSubTitleIndex = 0;

    function updateSubTitleField() {
        if (subTitleList.length > 0 && currentSubTitleIndex < subTitleList.length) {
            document.getElementById("SubTittle").value = subTitleList[currentSubTitleIndex];
        } else {
            document.getElementById("SubTittle").value = '';
        }
    }

    // Next Subtitle
    function btnNext() {
        if (currentSubTitleIndex < subTitleList.length - 1) {
            currentSubTitleIndex++;
            updateSubTitleField();
        } else {
            Swal.fire({
                icon: "info",
                title: "End of Subtitles",
                text: "No more subtitles available.",
            });
        }
    }

    // Previous Subtitle
    function btnPrevious() {
        if (currentSubTitleIndex > 0) {
            currentSubTitleIndex--;
            updateSubTitleField();
        } else {
            Swal.fire({
                icon: "info",
                title: "First Subtitle",
                text: "You're at the first subtitle.",
            });
        }
    }

    // Delete Current Subtitle
    function btnDelete() {
        if (subTitleList.length > 0) {
            Swal.fire({
                title: "Are you sure?",
                text: "Do you want to delete this subtitle?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    subTitleList.splice(currentSubTitleIndex, 1); // Remove current subtitle

                    if (currentSubTitleIndex >= subTitleList.length) {
                        currentSubTitleIndex = subTitleList.length - 1; // Adjust index if needed
                    }

                    updateSubTitleField(); // Refresh subtitle field

                    Swal.fire("Deleted!", "Subtitle has been removed.", "success");
                }
            });
        } else {
            Swal.fire({
                icon: "info",
                title: "No subtitles left",
                text: "There are no subtitles to delete.",
            });
        }
    }

    // Ensure subtitle is loaded on page load
    document.addEventListener("DOMContentLoaded", function () {
        updateSubTitleField();
    });


</script>

<script>
    function confirmDelete(url) {
        var result = confirm("Are you sure you want to delete?");
        if (result) {
            window.location.href = url;
        }
    }
</script>
<script>
    $(document).ready(function () {
        $('#datatable').DataTable();
    });
</script>





