@model CRM.Models.DTO.WorkLocationDTO

@{
    ViewData["Title"] = "WorkLocation";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<div class="page-wrapper">
    <div class="page-body-wrapper">
        <div class="page-sidebar">
        </div>

        <div class="page-body">

            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="page-header">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="page-header-left">
                                <h2>
                                    Add WorkLocation
                                </h2>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <ol class="breadcrumb pull-right">
                                <li class="breadcrumb-item"><a href="/Home/Dashboard"><i data-feather="home"></i></a></li>
                                <li class="breadcrumb-item">Settings</li>
                                <li class="breadcrumb-item active">WorkLocation</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Container-fluid Ends-->
            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <form asp-action="WorkLocation" autocomplete="off" onsubmit="return validateForm()">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <div class="row">
                                        <div class="form-group col-sm-4">
                                            <label>Company Name<span class="text-danger">*</span></label>
                                            <div class="dropdown-container position-relative">
                                                <select name="Customerid" class="form-control" id="ddCustomerid">
                                                    <option value="0">-- Select Company Name --</option>
                                                </select>
                                                <i class="dropdown-icon fa fa-caret-down position-absolute"></i>
                                            </div>
                                            <span id="CustomerCompanyNameError" class="text-danger" style="display:none;">Please select Company Name</span>
                                        </div>
                                        <div class="form-group col-sm-4">
                                            <div id="serviceContainer">
                                                @if (Model?.WorkLocationList != null)
                                                {
                                                    int featureIndex = 0;
                                                    foreach (var feature in Model.WorkLocationList)
                                                    {
                                                        <div class="service-container" id="row_@featureIndex">
                                                            <div class="input-group m-3">
                                                                <input type="text" name="WorkLocationList[@featureIndex].WorkLocationName" value="@feature.WorkLocationName" class="form-control m-input" required />
                                                                <div class="input-group-prepend">
                                                                    <button class="btn btn-danger deleteRow" data-index="@featureIndex" type="button">
                                                                        <i class="fa fa-trash"></i>
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        featureIndex++;
                                                    }
                                                }
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group" style="display:flex; justify-content:center;">
                                        <input type="submit" value="Submit" class="btn btn-primary" />
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>


    </div>

</div>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    function bindCustomerCompanyNameid(CustomerCompanyName) {
        var itemsListforCustomerCompanyNameid = @Json.Serialize(ViewBag.CustomerCompanyName);
        debugger
        var dropdownforCustomerCompanyNameid = $("#ddCustomerid");
        $.each(itemsListforCustomerCompanyNameid, function (index, item) {
            dropdownforCustomerCompanyNameid.append($('<option></option>').val(item.value).text(item.text));
        });
        if (CustomerCompanyName != "") {
            $("#ddCustomerid").val(CustomerCompanyName)
        }
    }
    var CustomerCompany = '@ViewBag.Customerid';
    if (CustomerCompany != "") {
        bindCustomerCompanyNameid(CustomerCompany);
    }
    else {
        bindCustomerCompanyNameid("");
    }
</script>
<script>
    $(document).ready(function () {
        // Select the serviceContainer element
        const serviceContainer = document.getElementById('serviceContainer');

        // Select all children with class 'service-container'
        const serviceRows = serviceContainer.getElementsByClassName('service-container');

        // Initialize an array to store the numeric parts of the IDs
        let indices = [];

        // Loop through serviceRows and push their numeric index into the array
        for (let i = 0; i < serviceRows.length; i++) {
            const id = serviceRows[i].id; // Get the ID
            const index = parseInt(id.split('_')[1], 10); // Extract the numeric index

            if (!isNaN(index)) {
                indices.push(index); // Add to the array if it's a valid number
            }
        }

        // Get the maximum index
        const maxIndex = indices.length > 0 ? Math.max(...indices) : -1; // -1 if no valid indices found

        // Calculate the next index
        const nextIndex = maxIndex + 1;

        // Output the next index
        console.log(nextIndex); // This will be the next index to use

        // Initialize serviceIndex based on the existing count of PlanFeatures
        var serviceIndex = nextIndex;

        // Add a new feature row
        $("#rowAdder").click(function () {
            var newServiceTextbox = $("<div>")
                .addClass("service-container")
                .attr("id", "row_" + serviceIndex);

            var inputTextbox = $("<input>")
                .attr("type", "text")
                .attr("name", "PlanFeatures[" + serviceIndex + "].Feature")
                .attr("class", "form-control m-input")
                .attr("required", true);

            var removeButton = $("<button>")
                .addClass("btn btn-danger deleteRow")
                .attr("type", "button")
                .attr("data-index", serviceIndex) // Use data attribute to track the index
                .html('<i class="fa fa-trash"></i>')
                .click(function () {
                    $(this).closest(".service-container").remove();
                });

            newServiceTextbox.append(
                $("<div>").addClass("input-group m-3")
                .append(inputTextbox)
                .append(removeButton)
            );

            $("#serviceContainer").append(newServiceTextbox);

            // Increment serviceIndex for the next new feature
            serviceIndex++;
        });

        // Delete a feature row
        $("body").on("click", ".deleteRow", function () {
            $(this).closest(".service-container").remove();
        });
    });
</script>