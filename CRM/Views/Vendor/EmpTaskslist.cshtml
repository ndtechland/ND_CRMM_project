@model CRM.Models.DTO.EmployeeTaskModel
@{
    ViewData["Title"] = "EmpTasks";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />


<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
<style>
    .select2-container .select2-selection--single {
        height: 34px !important;
    }

    .select2-container--default .select2-selection--single {
        border: 1px solid #ccc !important;
        border-radius: 0px !important;
    }

    .select2-results__options {
        display: grid !important;
    }

</style>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var message = "@TempData["Message"]";

        if (message) {
            Swal.fire({
                title: 'Success',
                text: message,
                icon: 'info',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    setTimeout(function () {
                        window.location.href = '@Url.Action("EmpTaskslist", "Vendor")';
                    }, 1000);
                }
            });
        }
    });
</script>
<div class="page-wrapper">
    <div class="page-body-wrapper">
        <div class="page-sidebar">
        </div>

        <div class="page-body">

            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="page-header">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="page-header-left">
                                <div class="page-header-left">
                                    <h4>@ViewBag.heading</h4>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <ol class="breadcrumb pull-right">
                                <li class="breadcrumb-item"><a href="/Home/Dashboard"><i data-feather="home"></i></a></li>
                                <li class="breadcrumb-item">Settings</li>
                                <li class="breadcrumb-item active">Task Assign</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Container-fluid Ends-->
            <!-- Container-fluid starts-->
            <div class="container-fluid">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-body">
                    <form method="post" asp-controller="Vendor" asp-action="EmpTaskslist" autocomplete="off" onsubmit="return validateForm()">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="row">
                            <div class="form-group col-lg-6">
                                <input type="hidden" name="Id" value="@ViewBag.id" />
                                <label for="TxtEmployeeId">Employee Id</label>
                                            <select id="TxtEmployeeId" name="EmployeeId" class="form-control select2" required>
                                                <option value="">-- Select EmployeeId --</option>
                                                @foreach (var item in ViewBag.EmployeeId)
                                                {
                                                    <option value="@item.Value">@item.Text</option>
                                                }
                                            </select>
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="TxttaskId">Employee Task</label>
                                <select id="TxttaskId" name="Emptask" class="form-control" required>
                                    <option value="">-- Select Task --</option>
                                    <!-- Populate tasks if needed -->
                                </select>
                            </div>
                                        @if (ViewBag.id==null)
{
                                            <div class="form-group col-md-6">
                                                <label class="control-label" for="Taskname">Task name</label>
                                                <input id="Taskname" type="text" name="Taskname[]" value="@Model?.Taskname" placeholder="Please Enter Task Name" class="form-control" />
                                            </div>
}

                            
                        </div>
                                    <div id="additionalTaskFields" class="row">
                                        @if (Model?.TasksLists != null)
                                        {
                                            foreach (var task in Model.TasksLists)
                                            {
                                                <div class="form-group col-md-6">
                                                    <input type="text" hidden name="TaskStatus[]" value="@task.TaskStatusId" class="form-control" placeholder="Please Enter Additional Task Name" />
                                                    <input type="text" name="Taskname[]" value="@task.TaskName" class="form-control" placeholder="Please Enter Additional Task Name" />
                                                    <i class="fas fa-trash-alt text-danger" style="cursor:pointer; margin-left:10px;" onclick="removeTask(this)"></i>
                                                </div>
                                            }
                                        }
                                    </div>
                        <div class="form-group" style="display:flex; justify-content:center;">
                            <button type="button" class="btn btn-primary" id="addTaskButton">Add More Task Name</button> &nbsp;
                            <input type="submit" value="@ViewBag.btnText" class="btn btn-primary" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="datatable" class="table table-responsive">
                            <thead>
                                <tr style="background-color: #00baf2;">
                                    <th nowrap>Sl. No.</th>
                                    <th>Employee Id</th>
                                    <th>Emptask Name</th>
                                    <th>Task Name</th>
                                    <th>Task Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var count = 0;
                                    foreach (var item in Model.EmpTaskList)
                                    {
                                        count++;
                                        <tr class="table-row">
                                            <td>@count</td>
                                            <td>@Html.DisplayFor(modelItem => item.EmployeeId)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Emptask)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Taskname)</td>
                                            <td>@Html.DisplayFor(modelItem => item.TaskStatus)</td>
                                            <td>
                                                <div>
                                                    <a href="@Url.Action("EmpTaskslist", "Vendor", new { id = item.Id })" class="fa fa-edit m-2 font-success"></a>
                                                    <a href="javascript:void(0);" onclick="confirmDelete('@Url.Action("DeleteEmpTaskslist", "Vendor", new { id = item.Id })')" class="fa fa-trash font-danger"></a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

            <div id="pagination-container">
                <ul id="pagination" class="pagination"></ul>
            </div>
        </div>


    </div>

</div>
<script>
    var currentPage = 1;
    var rowsPerPage = 5;
    $(document).ready(function () {
        function paginateTable() {
            var table = $('#datatable');
            var rows = table.find('tbody tr');


            var totalPages = Math.ceil(rows.length / rowsPerPage);


            var pagination = $('#pagination');
            pagination.empty();

            for (var i = 1; i <= totalPages; i++) {
                var link = $('<li class="page-item"><a class="page-link" href="#">' + i + '</a></li>');


                if (i === currentPage) {
                    link.addClass('active');
                }

                pagination.append(link);
            }


            var startIndex = (currentPage - 1) * rowsPerPage;
            var endIndex = startIndex + rowsPerPage;

            rows.hide().slice(startIndex, endIndex).show();
        }


        paginateTable();

        $(document).on('click', '#pagination li a', function (event) {
            event.preventDefault();

            var clickedPage = parseInt($(this).text());


            currentPage = clickedPage;
            paginateTable();


            $('html, body').animate({ scrollTop: $('#table-container').offset().top }, 'slow');
        });
    });

</script>
<script>
    function confirmDelete(url) {
        var result = confirm("Are you sure you want to delete?");
        if (result) {
            window.location.href = url;
        }
    }
</script>
<script>
    $('.select2').select2();
</script>

<script type="text/javascript">
    var selectedEmpId = '@ViewBag.EmpId';
    if (selectedEmpId) {
        window.addEventListener('DOMContentLoaded', function () {
            $("#TxtEmployeeId").val(selectedEmpId);
            const input = document.getElementById('TxtEmployeeId');
            const changeEvent = new Event('change');
            input.dispatchEvent(changeEvent);
        });
    }
</script>

<script>
    $('#TxtEmployeeId').change(function () {
        var employeeId = $(this).val();
        if (employeeId) {
            $.ajax({
                url: '@Url.Action("GetTasksByEmployeeId", "Vendor")',
                type: 'GET',
                data: { employeeId: employeeId },
                success: function (data) {
                    console.log("Data received: ", data);
                    $('#TxttaskId').empty();
                    $('#TxttaskId').append('<option value="">-- Select Task --</option>');
                    $.each(data, function (index, item) {
                        $('#TxttaskId').append('<option value="' + item.value + '">' + item.text + '</option>');
                    });
                    var selectedTaskId = '@ViewBag.Emptaskid';
                    console.log("Selected Task ID: ", selectedTaskId);
                    if (selectedTaskId) {
                        $('#TxttaskId').val(selectedTaskId).trigger('change');
                        console.log("Setting task dropdown to selected task ID: ", selectedTaskId);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                    console.log(xhr.responseText);
                }
            });
        } else {
            $('#TxttaskId').empty();
            $('#TxttaskId').append('<option value="">-- Select Task --</option>');
        }
    });
    $(document).ready(function () {
        $('#TxtEmployeeId').trigger('change');
    });
</script>
@* <script>
    document.getElementById('addTaskButton').addEventListener('click', function () {
        const taskFieldContainer = document.createElement('div');
        taskFieldContainer.className = 'form-group col-md-6';

        const taskLabel = document.createElement('label');
        taskLabel.className = 'control-label';
        taskLabel.textContent = 'Task name';
        taskFieldContainer.appendChild(taskLabel);

        const taskInput = document.createElement('input');
        taskInput.type = 'text';
        taskInput.name = 'Taskname[]';
        taskInput.placeholder = 'Please Enter Task Name';
        taskInput.className = 'form-control';

        taskFieldContainer.appendChild(taskInput);
        document.getElementById('additionalTaskFields').appendChild(taskFieldContainer);
    });
</script> *@



<script>
    document.getElementById('addTaskButton').addEventListener('click', function () {
        const taskFieldContainer = document.createElement('div');
        taskFieldContainer.className = 'form-group col-md-6';

        const taskInput = document.createElement('input');
        taskInput.type = 'text';
        taskInput.name = 'Taskname[]';
        taskInput.placeholder = 'Please Enter Task Name';
        taskInput.className = 'form-control';
        taskFieldContainer.appendChild(taskInput);

        const removeIcon = document.createElement('i');
        removeIcon.className = 'fas fa-trash-alt text-danger';
        removeIcon.style.cursor = 'pointer';
        removeIcon.style.marginLeft = '10px';
        removeIcon.addEventListener('click', function () {
            taskFieldContainer.remove();
        });
        taskFieldContainer.appendChild(removeIcon);

        document.getElementById('additionalTaskFields').appendChild(taskFieldContainer);
    });

    function removeTask(icon) {
        icon.parentNode.remove();  // Remove the task input field
    }
</script>