@model CRM.Models.DTO.EmployeeTaskModel
@{
    ViewData["Title"] = "EmpTasks";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />


<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.12/css/dataTables.bootstrap.min.css">
<script src="https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.2.2/js/dataTables.buttons.min.js"></script>

<style>
    .dataTables_wrapper table.dataTable th {
        background-color: #00baf2 !important;
        padding: 24px 0.75rem !important;
    }
</style>
<style>
    .select2-container .select2-selection--single {
        height: 34px !important;
    }

    .select2-container--default .select2-selection--single {
        border: 1px solid #ccc !important;
        border-radius: 0px !important;
    }

    .select2-results__options {
        display: grid !important;
    }

</style>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var message = "@TempData["Message"]";

        if (message == "ok" || message == "dltok" || message == "updok") {
            if (message) {
                let alertText;

                if (message == "dltok") {
                    alertText = "Deleted successfully.";
                } else if (message == "updok") {
                    alertText = "Sub task updated successfully.";
                } else {
                    alertText = "Sub task added successfully.";
                }

                Swal.fire({
                    title: 'Success',
                    text: alertText,
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        setTimeout(function () {
                            window.location.href = '@Url.Action("EmpTaskslist", "Vendor")';
                        }, 1000);
                    }
                });
            }
        }
        else {
            if (message) {
                Swal.fire({
                    title: 'Failed',
                    text: message,
                    icon: 'error',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        setTimeout(function () {
                            window.location.href = '@Url.Action("EmpTaskslist", "Vendor")';
                        }, 1000);
                    }
                });
            }
        }
    });
</script>
<div class="page-wrapper">
    <div class="page-body-wrapper">
        <div class="page-sidebar">
        </div>

        <div class="page-body">

            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="page-header">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="page-header-left">
                                <div class="page-header-left">
                                    <h4>@ViewBag.heading</h4>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <ol class="breadcrumb pull-right">
                                <li class="breadcrumb-item"><a href="/Home/Dashboard"><i data-feather="home"></i></a></li>
                                <li class="breadcrumb-item">HR Payrole</li>
                                <li class="breadcrumb-item">Task Management</li>
                                <li class="breadcrumb-item active">Add Sub task</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Container-fluid Ends-->
            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <form method="post" asp-controller="Vendor" asp-action="EmpTaskslist" autocomplete="off" onsubmit="return validateForm()">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <div class="row">
                                        <div class="form-group col-lg-6">
                                            <input type="hidden" name="Id" value="@ViewBag.id" />
                                            <label for="TxtEmployeeId">Employee Id</label>
                                           
                                            <select id="TxtEmployeeId" name="EmployeeId" class="form-control select2" required>
                                                <option value="">-- Select EmployeeId --</option>
                                                @foreach (var item in ViewBag.EmployeeId)
                                                {
                                                    <option value="@item.Value">@item.Text</option>
                                                }
                                            </select>
                                          
                                        </div>
                                        <div class="form-group col-lg-6">
                                            <label for="TxttaskId">Project Name</label>
                                            <div class="dropdown-container position-relative">
                                            <select id="TxttaskId" name="Emptask" class="form-control" required>
                                                <option value="">-- Select Project Name --</option>
                                                <!-- Populate tasks if needed -->
                                            </select>
                                                <i class="dropdown-icon fa fa-caret-down position-absolute"></i>
                                            </div>
                                        </div>
                                        @if (ViewBag.id == null)
                                        {
                                            <div class="form-group col-md-6">
                                                <label class="control-label" for="Taskname">Task name</label>
                                                <input id="Taskname" type="text" name="Taskname[]" value="@Model?.Taskname" placeholder="Please Enter Task Name" class="form-control" />
                                            </div>
                                        }


                                    </div>
                                    <div id="additionalTaskFields" class="row">
                                        @if (Model?.TasksLists != null)
                                        {
                                            foreach (var task in Model.TasksLists)
                                            {
                                                <div class="form-group col-md-6">
                                                    <input type="text" hidden name="TaskStatus[]" value="@task.TaskStatusId" class="form-control" placeholder="Please Enter Additional Task Name" />
                                                    <input type="text" name="Taskname[]" value="@task.TaskName" class="form-control" placeholder="Please Enter Additional Task Name" />
                                                    <i class="fas fa-trash-alt text-danger" style="cursor:pointer; margin-left:10px;" onclick="removeTask(this)"></i>
                                                </div>
                                            }
                                        }
                                    </div>
                                    <div class="form-group" style="display:flex; justify-content:center;">
                                        <button type="button" class="btn btn-primary" id="addTaskButton">Add More Task Name</button> &nbsp;
                                        <input type="submit" value="@ViewBag.btnText" class="btn btn-primary" />
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="container-fluid">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table id="myTable" class="table table-hover">
                                        <thead>
                                            <tr style="background-color: #00baf2;">
                                                <th nowrap>Sl. No.</th>
                                                <th hidden> gfgf</th>
                                                <th>Employee Id</th>
                                                <th nowrap>
                                                    Employee Name
                                                </th>
                                                <th>Project Name</th>
                                                <th>Task Name</th>
                                                <th>Task Status</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                var count = 0;
                                                foreach (var item in Model.EmpTaskList)
                                                {
                                                    count++;
                                                    <tr class="table-row">
                                                        <td>@count</td>
                                                        <td class="EmpTaskId" hidden>@item.SubtaskId</td>
                                                        <td>@Html.DisplayFor(modelItem => item.EmployeeId)</td>
                                                        <td nowrap>
                                                            @Html.DisplayFor(modelItem => item.EmployeeName)
                                                        </td>
                                                        <td>@Html.DisplayFor(modelItem => item.Emptask)</td>
                                                        <td>@Html.DisplayFor(modelItem => item.Taskname)</td>
                                                        <td>
                                                            <select name="StatusName" class="form-control taskstatus-dropdown" id="ddltaskstatusid_@item.SubtaskId" style="height: 40px; width: 230px;">
                                                                <option value="0">-- Select Status --</option>
                                                                @foreach (var statusitem in ViewBag.SubTaskStatus)
                                                                {
                                                                    <option value="@statusitem.Value">@statusitem.Text</option>
                                                                }
                                                            </select>
                                                        </td>

                                                        <td>
                                                            <div>
                                                                <a href="@Url.Action("EmpTaskslist", "Vendor", new { id = item.Id })" class="fa fa-edit m-2 font-success"></a>
                                                                <a href="javascript:void(0);" onclick="confirmDelete('@Url.Action("DeleteEmpTaskslist", "Vendor", new { id = item.SubtaskId })')" class="fa fa-trash font-danger"></a>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="pagination-container">
                <ul id="pagination" class="pagination"></ul>
            </div>
        </div>


    </div>

</div>

<script>
    $(document).ready(function () {
        document.title = 'SubTaskDetail';
        $('#datatable').DataTable(
            {
                "dom": '<"dt-buttons"Bf><"clear">lirtp',
                "paging": true,
                "autoWidth": true,
                "buttons": [
                    'colvis',
                    'copyHtml5',
                    'csvHtml5',
                    'excelHtml5',
                    'pdfHtml5',
                    'print'
                ]
            }
        );
    });
</script>
<script>
    function confirmDelete(url) {
        var result = confirm("Are you sure you want to delete?");
        if (result) {
            window.location.href = url;
        }
    }
</script>
<script>
    $('.select2').select2();
</script>

<script type="text/javascript">
    var selectedEmpId = '@ViewBag.EmpId';
    if (selectedEmpId) {
        window.addEventListener('DOMContentLoaded', function () {
            $("#TxtEmployeeId").val(selectedEmpId);
            const input = document.getElementById('TxtEmployeeId');
            const changeEvent = new Event('change');
            input.dispatchEvent(changeEvent);
        });
    }
</script>

<script>
    $('#TxtEmployeeId').change(function () {
        var employeeId = $(this).val();
        if (employeeId) {
            $.ajax({
                url: '@Url.Action("GetTasksByEmployeeId", "Vendor")',
                type: 'GET',
                data: { employeeId: employeeId },
                success: function (data) {
                    console.log("Data received: ", data);
                    $('#TxttaskId').empty();
                    $('#TxttaskId').append('<option value="">-- Select Project Name --</option>');
                    $.each(data, function (index, item) {
                        $('#TxttaskId').append('<option value="' + item.value + '">' + item.text + '</option>');
                    });
                    var selectedTaskId = '@ViewBag.Emptaskid';
                    console.log("Selected Task ID: ", selectedTaskId);
                    if (selectedTaskId) {
                        $('#TxttaskId').val(selectedTaskId).trigger('change');
                        console.log("Setting task dropdown to selected task ID: ", selectedTaskId);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                    console.log(xhr.responseText);
                }
            });
        } else {
            $('#TxttaskId').empty();
            $('#TxttaskId').append('<option value="">-- Select Task --</option>');
        }
    });
    $(document).ready(function () {
        $('#TxtEmployeeId').trigger('change');
    });
</script>

<script>
    document.getElementById('addTaskButton').addEventListener('click', function () {
        const taskFieldContainer = document.createElement('div');
        taskFieldContainer.className = 'form-group col-md-6';

        const taskInput = document.createElement('input');
        taskInput.type = 'text';
        taskInput.name = 'Taskname[]';
        taskInput.placeholder = 'Please Enter Task Name';
        taskInput.className = 'form-control';
        taskFieldContainer.appendChild(taskInput);

        const removeIcon = document.createElement('i');
        removeIcon.className = 'fas fa-trash-alt text-danger';
        removeIcon.style.cursor = 'pointer';
        removeIcon.style.marginLeft = '10px';
        removeIcon.addEventListener('click', function () {
            taskFieldContainer.remove();
        });
        taskFieldContainer.appendChild(removeIcon);

        document.getElementById('additionalTaskFields').appendChild(taskFieldContainer);
    });

    function removeTask(icon) {
        icon.parentNode.remove();
    }
</script>
<script>
    $(document).ready(function () {
        var table = $('#myTable').DataTable();

        // Function to update the dropdown color based on selected value
        function updateDropdownColor(dropdown) {
            $(dropdown).find('option').each(function () {
                var value = $(this).val();
                switch (value) {
                    case "1":
                        $(this).css('color', 'orange');
                        break;
                    case "2":
                        $(this).css('color', 'blue');
                        break;
                    case "3":
                        $(this).css('color', 'green');
                        break;
                    case "4":
                        $(this).css('color', 'purple');
                        break;
                    case "6":
                        $(this).css('color', 'red');
                        break;
                    default:
                        $(this).css('color', 'black');
                        break;
                }
            });

            var selectedValue = $(dropdown).val();
            switch (selectedValue) {
                case "1":
                    $(dropdown).css('color', 'orange');
                    break;
                case "2":
                    $(dropdown).css('color', 'blue');
                    break;
                case "3":
                    $(dropdown).css('color', 'green');
                    break;
                case "4":
                    $(dropdown).css('color', 'purple');
                    break;
                case "6":
                    $(dropdown).css('color', 'red');
                    break;
                default:
                    $(dropdown).css('color', 'black');
                    break;
            }
        }

        // Function to bind task status to dropdown based on task status ID
        function bindtaskstatusid(taskstatusid, itemsubtaskId) {
            var dropdownfortaskstatusid = $("#ddltaskstatusid_" + itemsubtaskId);
            if (taskstatusid && taskstatusid !== "0" && taskstatusid !== "") {
                dropdownfortaskstatusid.val(taskstatusid);
                updateDropdownColor(dropdownfortaskstatusid);
            }
        }

        // Initial binding of task status IDs for each row
    @foreach (var item in Model.EmpTaskList)
    {
        <text>
                    bindtaskstatusid('@item.TaskStatusId', '@item.SubtaskId'); // Bind each task status ID to its dropdown
        </text>
    }

            // Re-bind task status dropdowns after each table redraw (e.g., page change or search)
            table.on('draw', function () {
    @foreach (var item in Model.EmpTaskList)
    {
        <text>
                            bindtaskstatusid('@item.TaskStatusId', '@item.SubtaskId'); // Bind each task status ID again after redraw
        </text>
    }
            });

        // Handle dropdown change event to update its color
        $(document).on('change', '.taskstatus-dropdown', function () {
            updateDropdownColor(this);
        });
    });
</script>
 <script>
    $(document).ready(function () {
        $('.taskstatus-dropdown').each(function () {
            $(this).data('previous', $(this).val());
        });

        $(document).on("change", ".taskstatus-dropdown", function () {
            var selectedTaskStatusId = $(this).val();
            var previousTaskStatusId = $(this).data('previous');

            if (selectedTaskStatusId !== previousTaskStatusId) {
                var selectedId = $(this).closest('tr').find('.EmpTaskId').text().trim();

                $.ajax({
                    url: '/Vendor/UpdateSubTaskStatus',
                    type: 'POST',
                    data: {
                        Taskstatusid: selectedTaskStatusId,
                        Id: selectedId
                    },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: response.message
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error updating shift type:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'There was an error updating the shift type.'
                        });
                    }
                });

                $(this).data('previous', selectedTaskStatusId);
            }
        });
    });
</script>


@* <script>
    $(document).ready(function () {
        $('.taskstatus-dropdown').each(function () {
            $(this).data('previous', $(this).val());
        });

        $(document).on("change", ".taskstatus-dropdown", function () {
            var selectedTaskStatusId = $(this).val();
            var previousTaskStatusId = $(this).data('previous'); 

            if (selectedTaskStatusId !== previousTaskStatusId) {
                var selectedId = $(this).closest('tr').find('.EmpTaskId').text().trim();

                $.ajax({
                    url: '/Vendor/UpdateSubTaskStatus',
                    type: 'POST',
                    data: {
                        Taskstatusid: selectedTaskStatusId,
                        Id: selectedId
                    },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: response.message
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error updating shift type:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'There was an error updating the shift type.'
                        });
                    }
                });

                $(this).data('previous', selectedTaskStatusId);
            }
        });
    });
</script>


<script>
    $(document).ready(function () {
        $('#myTable').DataTable();
    });
</script>

<script>
    $(document).ready(function () {
        var table = $('#datatable').DataTable({
            "dom": '<"dt-buttons"Bf><"clear">lirtp',
            "paging": true,
            "autoWidth": true,
            "buttons": [
                'colvis',
                'copyHtml5',
                'csvHtml5',
                'excelHtml5',
                'pdfHtml5',
                'print'
            ]
        });

        function updateDropdownColor(dropdown) {
            $(dropdown).find('option').each(function () {
                var value = $(this).val(); 
                switch (value) {
                    case "1":
                        $(this).css('color', 'orange'); 
                        break;
                    case "2":
                        $(this).css('color', 'blue'); 
                        break;
                    case "3":
                        $(this).css('color', 'green'); 
                        break;
                    case "4":
                        $(this).css('color', 'purple');
                        break;
                    case "5":
                        $(this).css('color', 'red'); 
                        break;
                    default:
                        $(this).css('color', 'black'); 
                        break;
                }
            });

            var selectedValue = $(dropdown).val(); 
            switch (selectedValue) {
                case "1":
                    $(dropdown).css('color', 'orange'); 
                    break;
                case "2":
                    $(dropdown).css('color', 'blue'); 
                    break;
                case "3":
                    $(dropdown).css('color', 'green'); 
                    break;
                case "4":
                    $(dropdown).css('color', 'purple'); 
                    break;
                case "5":
                    $(dropdown).css('color', 'red'); 
                    break;
                default:
                    $(dropdown).css('color', 'black'); 
                    break;
            }
        }

        function bindtaskstatusid(taskstatusid, itemsubtaskId) {
            var dropdownfortaskstatusid = $("#ddltaskstatusid_" + itemsubtaskId);
            if (taskstatusid && taskstatusid !== "0" && taskstatusid !== "") {
                dropdownfortaskstatusid.val(taskstatusid); 
                updateDropdownColor(dropdownfortaskstatusid); 
            }
        }
    @foreach (var item in Model.EmpTaskList)
    {
        <text>
                    bindtaskstatusid('@item.TaskStatusId', '@item.SubtaskId'); // Bind each task status ID to its dropdown
        </text>
    }

        var usertaskstatus = '@ViewBag.SubTaskStatus';
        if (usertaskstatus != "") {
            bindtaskstatusid(usertaskstatus, ''); 
        }
        else {
            bindtaskstatusid("", ''); 
        }

        table.on('draw', function () {
    @foreach (var item in Model.EmpTaskList)
    {
        <text>
                        bindtaskstatusid('@item.TaskStatusId', '@item.SubtaskId'); // Bind task status ID again after redraw
        </text>
    }
            var usertaskstatus = '@ViewBag.SubTaskStatus';
            if (usertaskstatus != "") {
                bindtaskstatusid(usertaskstatus, ''); 
            }
            else {
                bindtaskstatusid("", ''); 
            }
        });

        $(document).on('change', '.taskstatus-dropdown', function () {
            updateDropdownColor(this); 
        });
    });

</script> *@
