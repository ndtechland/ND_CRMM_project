@model CRM.Models.DTO.EmployeeBreakDto

@{
    ViewData["Title"] = "EmployeeBreakList";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<style>
    .dataTables_wrapper table.dataTable th {
        background-color: #00baf2 !important;
        padding: 24px 0.75rem !important;
    }
</style>

<div class="page-wrapper">
    <div class="page-body-wrapper">
        <div class="page-sidebar">
        </div>
        <div class="page-body">
            <div class="container-fluid">
                <div class="page-header">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="page-header-left">
                                <h2>
                                    @ViewBag.heading
                                </h2>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <ol class="breadcrumb pull-right">
                                <li class="breadcrumb-item"><a href="/Home/Dashboard"><i data-feather="home"></i></a></li>
                                <li class="breadcrumb-item">Report</li>
                                <li class="breadcrumb-item active">Employee Attendance</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container-fluid">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <form method="get" id="filterForm">
                                    <div class="row">
                                        <div class="form-group col-sm-2">
                                            <label for="Month">Select Month:</label>
                                            <div class="dropdown-container position-relative">
                                                <select id="Month" class="form-control" name="month">
                                                    <option value="">-- Select Month --</option>
                                                </select>
                                                <i class="dropdown-icon fa fa-caret-down position-absolute"></i>
                                            </div>
                                        </div>

                                        <div class="form-group col-sm-2">
                                            <label for="Year">Select Year:</label>
                                            <div class="dropdown-container position-relative">
                                                <select id="Year" class="form-control" name="year">
                                                    <option value="">-- Select Year --</option>
                                                </select>
                                                <i class="dropdown-icon fa fa-caret-down position-absolute"></i>
                                            </div>
                                        </div>
                                    </div>
                                </form>

                                <img src="~/image/execimage.png" style="height:50px; margin-left:96%;width:53px;cursor:pointer" title="Export To Excel" onclick="BreakinExportExcelfn()" />
                                <div class=" table-responsive">
                                    <table id="datatable" class="table table-hover">
                                        <thead>
                                            <tr style="background-color: #00baf2;">
                                                <th nowrap>Sl. No.</th>
                                                <th nowrap>
                                                    Employee Id
                                                </th>
                                                <th nowrap>
                                                    Employee Name
                                                </th>
                                                <th nowrap>
                                                    Break-In Time
                                                </th>
                                                <th nowrap>
                                                    Break-Out Time
                                                </th>
                                                <th nowrap>Break Hours</th>
                                                <th nowrap>Attendance Date</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                var count = 0;
                                                foreach (var item in Model.Breakdetail)
                                                {
                                                    count++;
                                                    <tr class="table-row" data-empid="@item.EmpId">
                                                        <td>@count</td>
                                                        <td nowrap>
                                                            @Html.DisplayFor(modelItem => item.EmpId)
                                                        </td>
                                                        <td nowrap>
                                                            @Html.DisplayFor(modelItem => item.EmployeeName)
                                                        </td>
                                                        <td nowrap>
                                                            @item.BreakIntime
                                                        </td>
                                                        <td nowrap>
                                                            @item.BreakOuttime
                                                        </td>
                                                        <td>
                                                            @item.Breakhour
                                                        </td>
                                                        <td nowrap>
                                                            @item.CurrentDate
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('#datatable').DataTable();
    });
    async function BreakinExportExcelfn() {
        const firstRow = document.querySelector('.table-row');
        const empId = firstRow ? firstRow.getAttribute('data-empid') : null;

        const monthDropdown = document.getElementById("Month");
        const yearDropdown = document.getElementById("Year");

        const selectedMonth = monthDropdown ? monthDropdown.value : null;
        const selectedYear = yearDropdown ? yearDropdown.value : null;

        if (!empId) {
            Swal.fire({
                icon: 'warning',
                title: 'No Employee ID Found!',
                text: 'Please ensure there are break records available before exporting.',
            });
            return;
        }

        if (selectedMonth === "0" || selectedYear === "0") {
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Selection!',
                text: 'Please select both Month and Year before exporting.',
            });
            return;
        }

        try {
            Swal.fire({
                title: 'Generating Report...',
                text: 'Please wait while we prepare your report.',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            const response = await fetch(`/Vendor/ExportBreakinReport?EmpId=${empId}&Month=${selectedMonth}&Year=${selectedYear}`, {
                method: 'GET'
            });

            if (response.ok) {
                const contentDisposition = response.headers.get("Content-Disposition");
                if (contentDisposition && contentDisposition.includes("attachment")) {
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement("a");
                    a.href = url;
                    a.download = "Employee_Break_Report.xlsx";
                    document.body.appendChild(a);
                    a.click();
                    document.body.removeChild(a);
                    Swal.close();
                } else {
                    const message = await response.json();
                    Swal.fire({
                        icon: 'info',
                        title: 'No Records Found!',
                        text: message,
                    });
                }
            } else {
                const errorMessage = await response.text();
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: errorMessage,
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Request Failed!',
                text: 'Something went wrong. Please try again later.',
            });
        }
    }

    // function BreakinExportExcelfn() {
    //     const firstRow = document.querySelector('.table-row');
    //     const empId = firstRow ? firstRow.getAttribute('data-empid') : null;

    //     const monthDropdown = document.getElementById("Month");
    //     const yearDropdown = document.getElementById("Year");

    //     const selectedMonth = monthDropdown ? monthDropdown.value : null;
    //     const selectedYear = yearDropdown ? yearDropdown.value : null;

    //     if (!empId) {
    //         alert('No Employee ID found!');
    //         return;
    //     }

    //     if (selectedMonth === "0" || selectedYear === "0") {
    //         alert('Please select both Month and Year!');
    //         return;
    //     }

    //     window.location.href = `/Vendor/ExportBreakinReport?EmpId=${empId}&Month=${selectedMonth}&Year=${selectedYear}`;
    // }

</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const monthDropdown = document.getElementById("Month");
        const yearDropdown = document.getElementById("Year");
        const firstRow = document.querySelector('.table-row');
        const empId = firstRow ? firstRow.getAttribute('data-empid') : null;

        // Get preselected values from ViewBag (passed from Razor)
        const selectedMonth = "@(ViewBag.month ?? "")";
        const selectedYear = "@(ViewBag.year ?? "")";

        const monthNames = {
            1: "January", 2: "February", 3: "March", 4: "April",
            5: "May", 6: "June", 7: "July", 8: "August",
            9: "September", 10: "October", 11: "November", 12: "December"
        };

        // Populate Month Dropdown
        for (let i = 1; i <= 12; i++) {
            let option = document.createElement("option");
            option.value = i;
            option.textContent = monthNames[i];
            if (selectedMonth && selectedMonth == i.toString()) {
                option.selected = true;
            }
            monthDropdown.appendChild(option);
        }

        // Populate Year Dropdown
        const currentYear = new Date().getFullYear();
        const startYear = 2023;
        for (let year = startYear; year <= currentYear; year++) {
            let option = document.createElement("option");
            option.value = year;
            option.textContent = year;
            if (selectedYear && selectedYear == year.toString()) {
                option.selected = true;
            }
            yearDropdown.appendChild(option);
        }

        // Function to trigger API Call
        function fetchAttendanceData() {
            const month = monthDropdown.value;
            const year = yearDropdown.value;

            // Ensure both fields are selected
            if (month && year) {
                const url = `/Vendor/EmployeeBreakList?month=${month}&year=${year}&EmpId=${empId}`;
                window.location.href = url; // Redirect to fetch data
            }
        }

        // Event Listeners
        monthDropdown.addEventListener("change", fetchAttendanceData);
        yearDropdown.addEventListener("change", fetchAttendanceData);
    });
</script>