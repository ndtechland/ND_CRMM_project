@model CRM.Models.DTO.Invoice
@{
    DateTime date = DateTime.Now;
    string fordate = date.ToString("dd-MM-yyyy");
    var count = 1;
    decimal productPrice = Model.Productprice ?? 0;
    decimal cgst = Model.Cgst ?? 0;
    decimal scgst = Model.Scgst ?? 0;
    decimal igst = Model.Igst ?? 0;
    var cgstAmount = productPrice * cgst / 100;
    var scgstAmount = productPrice * scgst / 100;
    var igstAmount = productPrice * igst / 100;
    var subTotal = productPrice;
    var totalBeforeRounding = subTotal + (Model.Igst == null ? (cgstAmount + scgstAmount) : igstAmount);

    var roundedTotal = Math.Round(totalBeforeRounding, 0, MidpointRounding.AwayFromZero);
    var rounding = roundedTotal - totalBeforeRounding;
    var totalAmount = totalBeforeRounding + rounding;
    Layout = "~/Views/Shared/_adminLayout.cshtml";

}


<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            /*   background-color: #f2f2f2; */
        }

        @@page {
            size: A4;
            margin: 10mm;
            padding: 20px;
            box-sizing: border-box;
            background-color: white;
        }

        .invoice-container {
            width: 215mm;
            height: 315mm;
            margin: 2mm auto;
            padding: 20px;
            border: 1px solid #ccc;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 2px solid black;
            padding-bottom: 10px;
        }

            .header img {
                max-height: 60px;
            }

            .header div {
                text-align: right;
            }

        h1 {
            text-align: center;
            margin: 20px 0;
            font-size: 35px;
            text-transform: uppercase;
        }

        .invoice-details, .billing-details {
            margin-bottom: 20px;
            width: 100%;
            font-family: Arial, sans-serif;
        }

            .invoice-details table, .billing-details table {
                width: 100%;
                border-collapse: collapse;
            }

            .invoice-details td, .billing-details td {
                padding: 12px;
                vertical-align: top;
                border: 1px solid #ccc;
                font-size: 14px;
            }

            .invoice-details td {
                width: 50%;
            }

            .billing-details td {
                width: 50%;
            }

        strong {
            font-weight: bold;
        }

        td b {
            font-size: 16px;
            display: block;
        }

        @@media screen and (max-width: 768px) {
            .invoice-details table, .billing-details table {
                width: 100%;
            }

            .invoice-details td, .billing-details td {
                display: block;
                width: 100%;
            }

            .invoice-details td {
                margin-bottom: 10px;
            }
        }

        .invoice-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

            .invoice-table th, .invoice-table td {
                border: 1px solid #000;
                padding: 8px;
                text-align: center;
            }

            .invoice-table th {
                background-color: #f2f2f2;
            }

        .totals {
            float: right;
            margin-top: -31px;
        }

            .totals table {
                width: 300px;
                border-collapse: collapse;
                margin-top: 10px;
            }

            .totals td {
                padding: 5px;
                border: 1px solid #ccc;
            }

        .bank-details {
            margin-top: 74px;
            padding-top: 10px;
            font-size: medium;
        }

        .footer {
            clear: both;
            text-align: right;
            opacity: 0.8;
            filter: brightness(-10.8) contrast(1.8);
            margin-top: -177px;
        }

            .footer p {
                margin: 0;
            }

        .signature {
            margin-top: 50px;
        }

        .buttons {
            text-align: center;
            margin-top: 50px;
        }

            .buttons button {
                margin: 50px;
            }
    </style>
</head>
<body>
    <div>
        <div class="buttons">
            <button class="btn btn-primary" onclick="prepareForPrint()">Print</button>
            <a href="/Vendor/VendorList" class="btn btn-secondary">Back to List</a>
        </div>
        <div class="invoice-container">
            <div class="header">
                <img src="~/assets/images/layout-2/logo/logo.png" alt="Company Logo">
                <div>
                    <h3>N D Techland Private Limited</h3>
                    <p>
                        C 53, 1st Floor, Sector 2<br>
                        Noida Uttar Pradesh 201301<br>
                        GSTIN 09AAHCN4627Q1ZQ
                    </p>
                </div>
            </div>

            <h1>Tax Invoice</h1>

            <div class="invoice-details">
                <table>
                    <tr>
                        <td>
                            <strong>Invoice #:</strong> @Model.InvoiceNumber<br>
                            <strong>Invoice Date:</strong> @fordate <br>
                            <strong>Terms:</strong> @Model.Terms<br>
                            <strong>Due Date:</strong> @Model.Duedate.ToString("dd-MM-yyyy")
                        </td>
                        <td>
                            <strong>Place of Supply:</strong> Uttar Pradesh (09)
                        </td>
                    </tr>
                </table>
            </div>

            <div class="billing-details">
                <table>
                    <tr>
                        <td>
                            <strong>Bill To:</strong><br>
                            <b>@Model.CompanyName</b><br>
                            @Model.BillingAddress,<br>
                            @Model.CityName, @Model.StateName<br>
                            <strong>GSTIN:</strong> @Model.GstNumber
                        </td>
                        <td>
                            <strong>Ship To:</strong><br>
                            @Model.BillingAddress,<br>
                            @Model.CityName, @Model.StateName<br>
                            <strong>GSTIN:</strong> @Model.GstNumber
                        </td>
                    </tr>

                </table>
            </div>

            <table class="invoice-table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Item & Description</th>
                        <th>HSN/SAC</th>
                        <th>Rate</th>
                        @if (Model.Igst == null)
                        {
                            <th>CGST</th>
                            <th>SGST</th>
                        }
                        else
                        {
                            <th>IGST</th>
                        }
                        <th>Amount</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@count</td>
                        <td>@Model.ProductName</td>
                        <td>@Model.HsnSacCode</td>
                        <td>@String.Format("{0:0.00}", productPrice)</td>
                        @if (Model.Igst == null)
                        {
                            <td>@cgst% (@String.Format("{0:0.00}", cgstAmount))</td>
                            <td>@scgst% (@String.Format("{0:0.00}", scgstAmount))</td>
                        }
                        else
                        {
                            <td>@igst% (@String.Format("{0:0.00}", igstAmount))</td>
                        }
                        <td>@String.Format("{0:0.00}", productPrice)</td>
                    </tr>
                </tbody>
            </table>

            <div class="totals">
                <table>
                    <tr>
                        <td>Sub Total</td>
                        <td>@String.Format("{0:0.00}", subTotal)</td>
                    </tr>
                    @if (Model.Igst == null)
                    {
                        <tr>
                            <td>CGST (@cgst%)</td>
                            <td>@String.Format("{0:0.00}", cgstAmount)</td>
                        </tr>
                        <tr>
                            <td>SGST (@scgst%)</td>
                            <td>@String.Format("{0:0.00}", scgstAmount)</td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td>IGST (@igst%)</td>
                            <td>@String.Format("{0:0.00}", igstAmount)</td>
                        </tr>
                    }
                    <tr>
                        <td>Rounding</td>
                        <td>@rounding.ToString("F2")</td> <!-- Format to two decimal places -->
                    </tr>
                    <tr>
                        <td><strong>Total</strong></td>
                        <td id="total"><strong>₹ @String.Format("{0:0.00}", totalAmount)</strong></td>
                    </tr>
                    <tr>
                        <td><strong>Balance Due</strong></td>
                        <td><strong>₹ 0.00</strong></td>
                    </tr>
                </table>
            </div>
            <div>
                <h6>Total in Words</h6>
                <h6><strong><span id="totalInWords"></span></strong></h6>
            </div>
            <br />
            <div>
                <h6>Notes</h6>
                <h6><span>@Model.Notes</span></h6>
            </div>
            <div class="bank-details">
                <strong>Bank Details</strong>
                <br />
                <strong>A/C Holder Name:</strong> N D Techland Private Limited<br />
                <strong>
                    Bank Name:
                </strong> HDFC Bank<br />
                <strong>Account Number:</strong> 50200058620932<br />
                <strong>IFSC Code:</strong> HDFC0002667
            </div>
            <div class="footer">
                <img src="~/companyimage/638702289356130339.png" alt="Singature Logo">
                <p>Authorized Signatory</p>
            </div>
        </div>
    </div>
</body>
</html>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const totalText = document.getElementById('total')?.textContent?.replace('₹', '').trim() || '0';

        const totalAmount = parseFloat(totalText);

        if (isNaN(totalAmount)) {
            console.error('Invalid total amount');
            return;
        }
        const rupees = Math.floor(totalAmount);
        const totalInWords = `Indian Rupee ${convertNumberToWords(rupees)} Only`;
        const totalInWordsElement = document.getElementById('totalInWords');
        if (totalInWordsElement) {
            totalInWordsElement.textContent = totalInWords;
        }
        function convertNumberToWords(num) {
            const ones = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];
            const tens = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];
            const thousands = ['', 'Thousand', 'Lakh', 'Crore'];

            if (num === 0) return 'Zero';
            let words = '';
            let i = 0;

            while (num > 0) {
                if (num % 1000 !== 0) {
                    words = `${convertHundreds(num % 1000)} ${thousands[i]} ${words}`.trim();
                }
                num = Math.floor(num / 1000);
                i++;
            }
            return words;
        }

        function convertHundreds(num) {
            const ones = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];
            const tens = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];

            if (num === 0) return '';
            if (num < 20) return ones[num];
            if (num < 100) return `${tens[Math.floor(num / 10)]} ${ones[num % 10]}`.trim();
            return `${ones[Math.floor(num / 100)]} Hundred ${convertHundreds(num % 100)}`.trim();
        }
    });
</script>
<script>
    function prepareForPrint() {
        const elementsToHide = ['.buttons', '.page-body-wrapper', '.page-main-header', '.page-sidebar'];

        elementsToHide.forEach(selector => {
            const element = document.querySelector(selector);
            if (element) {
                element.style.display = 'none';
            }
        });
        const printStyle = document.createElement('style');
        printStyle.type = 'text/css';
        printStyle.media = 'print';
        printStyle.innerHTML = `
                            @@page {
                                margin: 0; /* Remove headers and footers */
                                size: A4; /* Ensure A4 size */
                            }
                            body {
                                margin: 0;
                                padding: 0;
                            }
                        `;
        document.head.appendChild(printStyle);
        window.print();
        setTimeout(() => {
            elementsToHide.forEach(selector => {
                const element = document.querySelector(selector);
                if (element) {
                    element.style.display = 'block';
                }
            });

            if (printStyle.parentNode) {
                document.head.removeChild(printStyle);
            }
            window.location.reload();
        }, 500);
    }
    document.addEventListener('keydown', function (event) {
        if (event.ctrlKey && event.key === 'p') {
            event.preventDefault();
            prepareForPrint();
        }
    });
</script>
