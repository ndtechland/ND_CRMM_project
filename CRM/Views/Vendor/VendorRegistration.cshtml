@model CRM.Models.DTO.VendorDto

@{
    ViewData["Title"] = "VendorRegistration";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var message = "@TempData["Message"]";

        if (message) {
            Swal.fire({
                 title: 'Success',
                text: message,
                icon: 'info',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    setTimeout(function () {
                        window.location.href = '@Url.Action("VendorList", "Vendor")';
                    }, 1000);
                }
            });
        }
    });
</script>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2-bootstrap-css/1.4.6/select2-bootstrap.min.css">

    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/css/select2.min.css" rel="stylesheet" />
    <style>

        .select2-results__option {
            padding-right: 20px;
            vertical-align: middle;
        }

            .select2-results__option:before {
                content: "";
                display: inline-block;
                position: relative;
                height: 20px;
                width: 20px;
                border: 2px solid #e9e9e9;
                border-radius: 4px;
                background-color: #fff;
                margin-right: 20px;
                vertical-align: middle;
            }

            .select2-results__option[aria-selected=true]:before {
                font-family: fontAwesome;
                content: "\f00c";
                color: #fff;
                background-color: #0096ff;
                border: 0;
                padding-left: 3px;
            }

        .select2-container--default .select2-results__option[aria-selected=true] {
            background-color: #fff;
        }

        .select2-container--default .select2-results__option--highlighted[aria-selected] {
            background-color: #eaeaeb;
            color: #272727;
        }

        .select2-container--default .select2-selection--multiple {
            margin-bottom: 10px;
        }

        .select2-container--default.select2-container--open.select2-container--below .select2-selection--multiple {
            border-radius: 4px;
        }

        .select2-container--default.select2-container--focus .select2-selection--multiple {
            border-color: #272727;
            border-width: 2px;
        }

        .select2-container--default .select2-selection--multiple {
            border-width: 2px;
        }

        .select2-container--open .select2-dropdown--below {
            border-radius: 6px;
            box-shadow: 0 0 10px rgba(0,0,0,0.5);
        }

        .select2-selection .select2-selection--multiple:after {
            content: 'hhghgh';
        }
        /* select with icons badges single*/
        .select-icon .select2-selection__placeholder .badge {
            display: none;
        }

        .select-icon .placeholder {
            /* 	display: none; */
        }

        .select-icon .select2-results__option:before,
        .select-icon .select2-results__option[aria-selected=true]:before {
            display: none !important;
            /* content: "" !important; */
        }

        .select-icon .select2-search--dropdown {
            display: none;
        }
    </style>
</head>


<div class="page-wrapper">
    <div class="page-body-wrapper">
        <div class="page-sidebar">
        </div>

        <div class="page-body">

            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="page-header">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="page-header-left">
                                <h2>
                                    @ViewBag.Heading
                                </h2>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <ol class="breadcrumb pull-right">
                                <li class="breadcrumb-item"><a href="/Home/Dashboard"><i data-feather="home"></i></a></li>
                                <li class="breadcrumb-item">CRM</li>
                                <li class="breadcrumb-item active">Vendor</li>
                                <li class="breadcrumb-item active">Vendor Registration</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Container-fluid Ends-->
            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="row">

                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <form asp-action="VendorRegistration" method="post" autocomplete="off">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <input type="hidden" asp-for="Id" />
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Company Name <span class="text-danger">*</span></label>
                                            <input asp-for="CompanyName" id="CompanyName" placeholder="Enter CompanyName" class="form-control" required="" oninvalid="this.setCustomValidity('Please Enter CompanyName')" oninput="this.setCustomValidity('')" />
                                            <span asp-validation-for="CompanyName" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Office Location <span class="text-danger">*</span></label>
                                            <div class="input-group">
                                                <input type="text" asp-for="Location" placeholder="Enter Location" id="address" class="form-control" required="" oninvalid="this.setCustomValidity('Please Enter Location')" oninput="this.setCustomValidity('')" />
                                            </div>
                                            <span asp-validation-for="Location" class="text-danger"></span>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label class="control-label">State Name <span class="text-danger">*</span></label>
                                            <div>
                                                <select class="form-control" asp-for="StateId" asp-items="@ViewBag.StateItems" id="ddlState">
                                                    <option value="">--Select State--</option>
                                                </select>
                                              @*   <select class="form-control" name="StateId" id="ddlState">
                                                </select> *@
                                                @*<select class="form-control" name="StateId" id="ddlState">
                                                <option value="">-- Select State --</option>
                                                @foreach (var state in ViewBag.States as IEnumerable<SelectListItem>)
                                                {
                                                <option value="@state.Value">@state.Text</option>
                                                }
                                                </select>*@
                                            </div>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">City Name <span class="text-danger">*</span></label>
                                            <div>
                                                @* <select class="form-control js-select2" multiple="multiple" name="WorkLocation" id="ddlCity" onchange="validateWorkLocation(this)" oninvalid="this.setCustomValidity('Please select WorkLocation')" oninput="this.setCustomValidity('')" autocomplete="off">
                                                    <option value="">-- Select City Name --</option>
                                                </select> *@
                                                <select class="form-control" name="WorkLocation" id="ddlCityid">
                                                    <option value="">-- Select City --</option>
                                                </select>
                                            </div>
                                            <span asp-validation-for="WorkLocation" class="text-danger"></span>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Mobile Number <span class="text-danger">*</span></label>
                                            <div class="input-group">
                                                <span class="input-group-text" id="basic-addon1">+91</span>
                                                <input type="tel" asp-for="MobileNumber" id="MobileNumber" placeholder="Enter MobileNumber" class="form-control" minlength="10" maxlength="10" onkeydown="validateNumericInput(event)" required="" oninvalid="this.setCustomValidity('Please Enter MobileNumber')" oninput="this.setCustomValidity('')" autocomplete="off" />
                                            </div>
                                            <span asp-validation-for="MobileNumber" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Alternate Number</label>
                                            <div class="input-group">
                                                <span class="input-group-text" id="basic-addon1">+91</span>
                                                <input type="text" asp-for="AlternateNumber" placeholder="Enter AlternateNumber" class="form-control" minlength="10" maxlength="10" onkeydown="validateNumericInput(event)" required="" oninvalid="this.setCustomValidity('Please Enter AlternateNumber')" oninput="this.setCustomValidity('')" />
                                            </div>
                                            <span asp-validation-for="AlternateNumber" class="text-danger"></span>
                                        </div>
                                       
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Email <span class="text-danger">*</span></label>
                                            <input type="email" asp-for="Email" placeholder="Enter Email" class="form-control" required="" oninvalid="this.setCustomValidity('Please Enter Email')" oninput="this.setCustomValidity('')" />
                                            <span asp-validation-for="Email" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Gst Number <span class="text-danger">*</span></label>
                                            <input asp-for="GstNumber" id="GstNumber" class="form-control" placeholder="Enter GstNumber" maxlength="15" minlength="15" onblur="ValidateGST()" required="" oninvalid="this.setCustomValidity('Please Enter GstNumber')" oninput="this.setCustomValidity('')" />
                                            <span asp-validation-for="GstNumber" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="form-group col-sm">
                                        <label for="sameAsCompanyAddress">
                                            <input type="checkbox" id="sameAsCompanyAddress" name="IsSameAddress" value="true" class="Activechecked" onclick="copyAddress()"> Same as Company Address
                                        </label>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Billing Address <span class="text-danger">*</span></label>
                                            <input asp-for="BillingAddress" placeholder="Enter BillingAddress" class="form-control" required="" oninvalid="this.setCustomValidity('Please Enter BillingAddress')" oninput="this.setCustomValidity('')" />
                                            <span asp-validation-for="BillingAddress" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">State <span class="text-danger">*</span></label>
                                            <select asp-for="BillingStateId" asp-items="@ViewBag.StateItems" id="stateid" class="form-control" required>
                                                <option value="">--Select State--</option>
                                            </select>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">City <span class="text-danger">*</span></label>
                                            <select asp-for="BillingCityId" class="form-control" id="districtid" required>
                                                <option value="">--Select City--</option>
                                            </select>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Product Details <span class="text-danger">*</span></label>

                                            @Html.DropDownListFor(model => model.ProductDetails, new SelectList(ViewBag.ProductDetails, "Value", "Text"), "-- Select Product --", new { @class = "form-control", onchange = "onProductChange()", required = "required", oninvalid = "this.setCustomValidity('Please select ProductDetails')", oninput = "this.setCustomValidity('')" })

                                            <span asp-validation-for="ProductDetails" class="text-danger"></span>
                                        </div>
                                    </div>
                                    
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Price <span class="text-danger">*</span></label>
                                            <input class="form-control" name="Price" placeholder="00.0" value="@ViewBag.Price" id="Price" type="text" onkeydown="validateNumericInput(event)">
                                            <span asp-validation-for="Price" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Renew Price <span class="text-danger">*</span></label>
                                            <input class="form-control" name="Renewprice" value="@ViewBag.Renewprice" id="Renewprice" type="text" onkeydown="validateNumericInput(event)">
                                            <span asp-validation-for="Renewprice" class="text-danger"></span>
                                        </div> 
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Number Of Renew Month <span class="text-danger">*</span></label>
                                            <input class="form-control" name="NoOfRenewMonth" placeholder="1" value="@ViewBag.NoOfRenewMonth" id="NoOfRenewMonth" type="text" onkeydown="validateNumericInput(event)" maxlength="2">
                                            <span asp-validation-for="NoOfRenewMonth" class="text-danger"></span>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Start Date <span class="text-danger">*</span></label>
                                            <input name="StartDate" type="date" id="StartDate" class="form-control text-box single-line" required="" oninvalid="this.setCustomValidity('Please select StartDate')" oninput="this.setCustomValidity('')" value="@ViewBag.startDate" />
                                            <span asp-validation-for="StartDate" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">Renew Date</label>
                                            <input name="RenewDate" type="date" id="RenewDate" class="form-control" required="" oninvalid="this.setCustomValidity('Please select RenewDate')" oninput="this.setCustomValidity('')" value="@ViewBag.renewDate" readonly="readonly" />
                                            <span asp-validation-for="RenewDate" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="row">
                                         
                                        @* <div class="form-group col-sm">
                                            <label for="validationCustom0">State <span class="text-danger">*</span></label>
                                            <select asp-for="State" id="State" class="form-control" required="required" onchange="validateState(this)" oninvalid="this.setCustomValidity('Select State')" oninput="this.setCustomValidity('')">
                                                <option value="">-- Select State --</option>
                                                <option value="UP">UP</option>
                                                <option value="Other">Other</option>
                                            </select>
                                        </div> *@
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">HSN Code</label>
                                            <input type="text" asp-for="HsnSacCode" id="HsnSacCode" placeholder="HsnSacCode" class="form-control" readonly />
                                        </div>

                                    </div>
                                    <div class="row">
                                        
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">IGST</label>
                                            <input type="Igst" asp-for="Igst" id="IGST" placeholder="00.0" class="form-control" readonly />
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">SGST</label>
                                            <input type="Scgst" asp-for="Scgst" id="SGST" placeholder="00.0" class="form-control" readonly />
                                        </div>
                                        <div class="form-group col-sm">
                                            <label for="validationCustom0">CGST</label>
                                            <input type="Cgst" asp-for="Cgst" id="CGST" placeholder="00.0" class="form-control" readonly />
                                        </div>
                                    </div>

                                    <div class="form-group" style="display:flex; justify-content:center;">
                                        <input type="submit" value="@ViewBag.btnText" class="btn btn-primary" />
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>
    <input hidden type="text" id="iGST" value="" />
    <input hidden type="text" id="cGST" value="" />
    <input hidden type="text" id="sGST" value="" />
    <input hidden type="text" id="hsnSacCode" value="" />
    <input hidden type="text" id="price" value="" />
    <input hidden type="text" id="stateid" />
    <input type="hidden" id="cityId" />
</div>
<!-- Add this in the head section of your HTML -->


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.2.1/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/js/select2.min.js" defer></script>


@* <script>
    document.getElementById('NoOfRenewMonth').addEventListener('input', function () {
        const renewMonth = parseInt(this.value);
        const startDate = document.getElementById('StartDate').value;

        if (renewMonth && startDate) {
            const start = new Date(startDate);
            start.setMonth(start.getMonth() + renewMonth); // Add the inputted number of months

            // Format date as YYYY-MM-DD
            const formattedDate = start.toISOString().split('T')[0];

            document.getElementById('RenewDate').value = formattedDate;
        }
    });
</script> *@

<script>
    function calculateRenewDate() {
        const renewMonth = parseInt(document.getElementById('NoOfRenewMonth').value);
        const startDate = document.getElementById('StartDate').value;

        if (renewMonth && startDate) {
            const start = new Date(startDate);
            start.setMonth(start.getMonth() + renewMonth); // Add the inputted number of months

            // Format date as YYYY-MM-DD
            const formattedDate = start.toISOString().split('T')[0];

            document.getElementById('RenewDate').value = formattedDate;
        }
    }

    // Event listeners for both Start Date and Number Of Renew Month fields
    document.getElementById('NoOfRenewMonth').addEventListener('input', calculateRenewDate);
    document.getElementById('StartDate').addEventListener('input', calculateRenewDate);
</script>
@* <script>
    $(document).ready(function () {
        onProductChange();

        function mess() {
            if ('@ViewBag.state' != null) {
                $('#State').val('@ViewBag.state');
                //$('#State').trigger('change');
            }
        }
        setTimeout(mess, 1000);
    });
</script> *@
@* <script>
    $(document).ready(function () {
        var selectedStateId = @Html.Raw(Json.Serialize(ViewBag.SelectedStateId));

        var ddlState = $("#ddlState");

        ddlState.val(selectedStateId);
        function ddstatetrigger() {
            if (selectedStateId) {
                ddlState.trigger('change');
                var workLocations = @Html.Raw(Json.Serialize(Model != null && Model.WorkLocation != null ? Model.WorkLocation : null));
                var worklocName = '@Html.Raw(Json.Serialize(ViewBag.SelectedCityId))';
                var jsList = JSON.parse(worklocName);
                var selectedTextName = '';

                if (workLocations && Array.isArray(workLocations)) {
                    for (var i = 0; i < workLocations.length; i++) {
                        for (var j = 0; j < jsList.length; j++) {
                            if (workLocations[i] == jsList[j].value) {
                                if (selectedTextName === '') {
                                    selectedTextName += jsList[j].text;
                                } else {
                                    selectedTextName = selectedTextName + ', ' + jsList[j].text;
                                }
                            }
                        }
                    }
                }

            }
        }
        //  ddlState.trigger('change');
        // Call ddstatetrigger after 3 seconds
        //setTimeout(ddstatetrigger, 3000);
    });
</script> *@
<script>
    $(document).ready(function () {
        $('#State').change(function () {
            var selectedState = $(this).val();
            if (selectedState === 'UP') {
                $('#CGST').val($('#cGST').val());
                $('#SGST').val($('#sGST').val());
                $('#HsnSacCode').val($('#hsnSacCode').val());
                $('#Price').val($('#price').val());
                $('#IGST').val('');

            } else {
                $('#IGST').val($('#iGST').val());
                $('#CGST').val('');
                $('#SGST').val('');
                $('#HsnSacCode').val($('#hsnSacCode').val());
                $('#Price').val($('#price').val());
            }
        });
    });
</script>

@* <script>
    function onProductChange() {
        var id = $("#ProductDetails").val();
        $.ajax({
            url: '/Home/product?id=' + id,
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
             if(response.data != null) {
                if ((response.data.state) === 'UP' ) {
                    $('#CGST').val(response.data.cgst);
                    $('#SGST').val(response.data.scgst);
                    $('#HsnSacCode').val(response.data.hsnSacCode);
                    $('#Price').val(response.data.price);
                    $('#IGST').val(response.data.igst);
                }
                else {
                   
                    $('#HsnSacCode').val(response.data.hsnSacCode);
                    $('#Price').val(response.data.price);
                }
                }
                 else{
                    $('#CGST').val('');
                    $('#SGST').val('');
                    $('#HsnSacCode').val('');
                    $('#Price').val('');
                    $('#IGST').val('');
                    $('#State').val('');
                 }

                if (response) {
                    if (response.data != null) {
                        $('#cGST').val(response.data.cgst);
                        $('#iGST').val(response.data.igst);
                        $('#sGST').val(response.data.scgst);
                        $('#hsnSacCode').val(response.data.hsnSacCode);
                        $('#price').val(response.data.price);
                    }

                    if ($('#State').val() === 'UP') {
                        $('#CGST').val($('#cGST').val());
                        $('#SGST').val($('#sGST').val());
                        $('#HsnSacCode').val($('#hsnSacCode').val());
                        $('#Price').val($('#price').val());
                        $('#IGST').val('');

                    } else if ($('#State').val() === 'Other') {
                        $('#IGST').val($('#iGST').val());
                        $('#CGST').val('');
                        $('#SGST').val('');
                        $('#HsnSacCode').val($('#hsnSacCode').val());
                        $('#Price').val($('#price').val());
                    }

                }
                else {
                    alert('Data not found');
                }

            },
            error: function () {
                alert('Error fetching data');
            }
        });
    }
    function validateNumericInput(event) {
        if ([46, 8, 9, 27, 13].indexOf(event.keyCode) !== -1 ||
            (event.keyCode == 65 && event.ctrlKey === true) ||
            (event.keyCode >= 35 && event.keyCode <= 39)) {
            return;
        }
        if ((event.shiftKey || (event.keyCode < 48 || event.keyCode > 57)) && (event.keyCode < 96 || event.keyCode > 105)) {
            event.preventDefault();
        }

    }
    function ValidateGST() {
        var Obj = document.getElementById("GstNumber");
        if (Obj.value != "") {
            ObjVal = Obj.value;
            var gstPat = /^([0-9]{2}[a-zA-Z]{4}([a-zA-Z]{1}|[0-9]{1})[0-9]{4}[a-zA-Z]{1}([a-zA-Z]|[0-9]){3}){0,15}$/;
            if (ObjVal.search(gstPat) == -1) {
                swal("Invalid GstNumber. It should be in this 11AAAAA1111Z1A1 format'");
                Obj.value = '';
                return false;
            }
            else {
            }
        }
    }
</script> *@

<script>
    $(document).ready(function () {
        // Event listener for product change
        $("#ProductDetails").change(function () {
            updateTaxFields();
        });

        // Event listener for state change
        $("#stateid").change(function () {
            updateTaxFields();
        });
    });
    
    function updateTaxFields() {
        var productId = $("#ProductDetails").val();
        var stateId = $("#stateid").val();

        $.ajax({
            url: '/Home/product?id=' + productId,
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                if (response.data != null) {
                    $('#HsnSacCode').val(response.data.hsnSacCode);
                    $('#Price').val(response.data.price);

                    // Check if the selected state is Uttar Pradesh
                    if (stateId === '23') {
                        $('#CGST').val(response.data.cgst);
                        $('#SGST').val(response.data.scgst);
                        $('#IGST').val(''); // Clear IGST
                    } else {
                        $('#IGST').val(response.data.igst);
                        $('#CGST').val(''); // Clear CGST
                        $('#SGST').val(''); // Clear SGST
                    }
                } else {
                    // Clear all fields if no data is found
                    $('#CGST').val('');
                    $('#SGST').val('');
                    $('#HsnSacCode').val('');
                    $('#Price').val('');
                    $('#IGST').val('');
                }
            },
            error: function () {
                alert('Error fetching data');
            }
        });
    }

    function validateNumericInput(event) {
        if ([46, 8, 9, 27, 13].indexOf(event.keyCode) !== -1 ||
            (event.keyCode == 65 && event.ctrlKey === true) ||
            (event.keyCode >= 35 && event.keyCode <= 39)) {
            return;
        }
        if ((event.shiftKey || (event.keyCode < 48 || event.keyCode > 57)) && (event.keyCode < 96 || event.keyCode > 105)) {
            event.preventDefault();
        }
    }

    function ValidateGST() {
        var Obj = document.getElementById("GstNumber");
        if (Obj.value != "") {
            var ObjVal = Obj.value;
            var gstPat = /^([0-9]{2}[a-zA-Z]{4}([a-zA-Z]{1}|[0-9]{1})[0-9]{4}[a-zA-Z]{1}([a-zA-Z]|[0-9]){3}){0,15}$/;
            if (ObjVal.search(gstPat) == -1) {
                swal("Invalid GstNumber. It should be in this format: 11AAAAA1111Z1");
                Obj.value = '';
                return false;
            }
        }
    }
</script>

@* <script>
    function validateWorkLocation(selectElement) {
        var selectedValues = Array.from(selectElement.selectedOptions, option => option.value);

        if (selectedValues.length === 0) {
            selectElement.setCustomValidity('-- Select City Name --');
        } else {
            selectElement.setCustomValidity('');
        }
    }
</script>
<script>
    function validateState(selectElement) {
        if (selectElement.value === "") {
            selectElement.setCustomValidity('--Select State --');
        } else {
            selectElement.setCustomValidity('');
        }
    }
</script>
<script>
    $(document).ready(function () {
        var ddlWorkLocation = $('#ddlCity');
        ddlWorkLocation.select2({
            closeOnSelect: false,
            placeholder: "-- Select City --",
            allowClear: true,
            tags: true
        });
    });
</script>
<script>
    $(document).ready(function () {
        var ddlState = $('#ddlState');
        var ddlCity = $('#ddlCity');
        $.ajax({
            url: '/Home/BindStateDetails',
            type: 'GET',
            dataType: 'json',
            success: function (states) {
                $.each(states, function (i, state) {
                    ddlState.append($("<option></option>").val(state.id).html(state.sName));
                });

                var selectedStateId = '@ViewBag.SelectedStateId';
                if (selectedStateId) {
                    ddlState.val(selectedStateId);
                    ddlState.trigger('change');
                }
            },
            error: function () {
                alert('Error loading states!');
            }
        });
        $("#ddlState").change(function () {
            var selectedStateId = $(this).val();
            if (selectedStateId) {
                $.ajax({
                    url: '/Home/BindCityDetails',
                    type: 'GET',
                    dataType: 'json',
                    data: { stateId: selectedStateId },
                    success: function (cities) {
                        ddlCity.empty();
                        $.each(cities, function (i, city) {
                            ddlCity.append($("<option></option>").val(city.id).html(city.city1));
                        });
                        var selectedCities = @Html.Raw(Json.Serialize(Model != null && Model.WorkLocation != null ? Model.WorkLocation : new string[] { }));
                        if (selectedCities && Array.isArray(selectedCities)) {
                            ddlCity.val(selectedCities);
                        }
                    },
                    error: function () {
                        alert('Error loading cities!');
                    }
                });
            }
        });
        var initialStateId = '@ViewBag.SelectedStateId';
        if (initialStateId) {
            ddlState.val(initialStateId).trigger('change');
        }
    });

</script>
<script>
    $(document).ready(function () {
        var ddlState = $('#ddlState');
        ddlState.append($("<option></option>").val('').html('-- Select State --'));
        $.ajax({
            url: '/Home/BindStateDetails',
            type: 'GET',
            dataType: 'json',
            success: function (d) {
                $.each(d, function (i, states) {
                    ddlState.append($("<option></option>").val(states.id).html(states.sName));
                });
            },
            error: function () {
                alert('Error!');
            }
        });
        $("#ddlState").change(function () {
            var StateId = parseInt($(this).val());
            if (!isNaN(StateId)) {
                var ddlCity = $('#ddlCity');
                ddlCity.append($("<option></option>").val('').html('Please wait ...'));

               
                $.ajax({
                    url: '/Home/BindCityDetails',
                    type: 'GET',
                    dataType: 'json',
                    data: { stateId: StateId },
                    success: function (d) {
                        ddlCity.empty();
                        ddlCity.append($("<option></option>").val('').html('Select City Name'));
                        $.each(d, function (i, cities) {
                            ddlCity.append($("<option></option>").val(cities.id).html(cities.city1));
                        });
                        var selectedCities = @Html.Raw(Json.Serialize(Model != null && Model.WorkLocation != null ? Model.WorkLocation : new string[] { }));
                        if (selectedCities && Array.isArray(selectedCities)) {
                            ddlCity.val(selectedCities);
                        }
                    },
                    error: function () {
                        alert('Error!');
                    }
                });
            }
        });
    })
</script> *@


@* for auto selected details same as company address *@
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const checkbox = document.getElementById('sameAsCompanyAddress');

        // Add event listeners for the checkbox and input fields
        checkbox.addEventListener('change', copyAddress);
        document.getElementById('address').addEventListener('input', copyAddress);
        document.getElementById('ddlState').addEventListener('change', copyAddress);
        document.getElementById('ddlCityid').addEventListener('change', copyAddress);
    });

    function copyAddress() {
        const checkbox = document.getElementById('sameAsCompanyAddress');
        const companyAddress = document.getElementById('address').value;
        const companyState = document.getElementById('ddlState').value;
        const companyCity = document.getElementById('ddlCityid').value;

        const billingAddress = document.getElementById('BillingAddress');
        const billingState = document.getElementById('stateid');
        const billingCity = document.getElementById('districtid');

        if (checkbox.checked) {
            billingAddress.value = companyAddress;
            billingState.value = companyState;

            // Trigger change event to populate city dropdown
            billingState.dispatchEvent(new Event('change'));

            // Use a timeout to wait for the city dropdown to be populated
            setTimeout(() => {
                billingCity.value = companyCity;
            }, 500); // Adjust the delay if needed

            billingAddress.readOnly = true;
             
            $("#stateid").css("pointer-events", "none");
            $("#stateid").css("background-color", "#e9ecef");

           // $("#districtid").css("opacity", "0.5");
            $("#districtid").css("pointer-events", "none");
            $("#districtid").css("background-color", "#e9ecef");
            billingCity.disabled = false; // Keep city dropdown enabled
        } else {
            billingAddress.readOnly = false;

            $("#stateid").css("pointer-events", "auto");
            $("#stateid").css("background-color", "#FFFFFF");

            $("#districtid").css("pointer-events", "auto");
            $("#districtid").css("background-color", "#FFFFFF");
           

            billingAddress.value = ''; // Clear billing address fields
            billingState.value = '';
            billingCity.value = '';
        }
    }
</script>


@* for company city *@
<script type="text/javascript">
    $(document).ready(function () {
        // Store DistrictId from the view for edit time
        var selectedDistrictId = '@Html.Raw(ViewBag.SelectedCityId ?? "null")'; // Fetch DistrictId, use null if not set
        // Check if stateId is already set (useful for edit scenario)
        var stateId = $('#ddlState').val();
        if (stateId) {
            loadDistricts(stateId, selectedDistrictId); // Pass selectedDistrictId for edit time
        }

        $('#ddlState').change(function () {
            var stateId = $(this).val();
            if (stateId) {
                loadDistricts(stateId); // On change, no need to pass selectedDistrictId
            } else {
                $('#ddlCityid').empty();
                $('#ddlCityid').append('<option value="">--Select City--</option>');
            }
        });

        // Function to load districts based on selected state
        function loadDistricts(stateId, selectedDistrictId = null) {
            $.ajax({
                url: '@Url.Action("GetCityByStateId", "Customer")',
                type: "GET",
                data: { stateId: stateId },
                success: function (data) {
                    $('#ddlCityid').empty();
                    $('#ddlCityid').append('<option value="">--Select City--</option>');

                    $.each(data, function (index, item) {
                        var isSelected = selectedDistrictId && item.id == selectedDistrictId ? 'selected' : '';
                        $('#ddlCityid').append('<option value="' + item.id + '" ' + isSelected + '>' + item.name + '</option>');
                    });

                    // If district is pre-selected (edit mode), ensure it is selected in the dropdown
                    if (selectedDistrictId) {
                        $('#ddlCityid').val(selectedDistrictId); // Set the selected district in case it wasn't set correctly by "selected" attribute
                    }
                },
                error: function () {
                    console.error('Failed to load districts.');
                }
            });
        }
    });
</script>

@* for billing city *@
<script type="text/javascript">
    $(document).ready(function () {
        // Store DistrictId from the view for edit time
        var selectedDistrictId = '@Html.Raw(ViewBag.SelectedBillingCityId ?? "null")'; // Fetch DistrictId, use null if not set
        // Check if stateId is already set (useful for edit scenario)
        var stateId = $('#stateid').val();
        $("#stateid").trigger('change');
        if (stateId) {
            loadDistricts(stateId, selectedDistrictId); // Pass selectedDistrictId for edit time
        }

        $('#stateid').change(function () {
            var stateId = $(this).val();
            if (stateId) {
                loadDistricts(stateId); // On change, no need to pass selectedDistrictId
            } else {
                $('#districtid').empty();
                $('#districtid').append('<option value="">--Select City--</option>');
            }
        });

        // Function to load districts based on selected state
        function loadDistricts(stateId, selectedDistrictId = null) {
            $.ajax({
                url: '@Url.Action("GetCityByStateId", "Customer")',
                type: "GET",
                data: { stateId: stateId },
                success: function (data) {
                    $('#districtid').empty();
                    $('#districtid').append('<option value="">--Select City--</option>');

                    $.each(data, function (index, item) {
                        var isSelected = selectedDistrictId && item.id == selectedDistrictId ? 'selected' : '';
                        $('#districtid').append('<option value="' + item.id + '" ' + isSelected + '>' + item.name + '</option>');
                    });

                    // If district is pre-selected (edit mode), ensure it is selected in the dropdown
                    if (selectedDistrictId) {
                        $('#districtid').val(selectedDistrictId); // Set the selected district in case it wasn't set correctly by "selected" attribute
                    }
                },
                error: function () {
                    console.error('Failed to load districts.');
                }
            });
        }
    });
</script>

@*  for checkbox *@
<script>
    if ('@ViewBag.CheckIsSameAddress' == 'True') {
        document.addEventListener("DOMContentLoaded", function (event) {
            setTimeout(check, 1000);
            function check() {
                $('.Activechecked').trigger('click')
                $('.Activechecked').attr('checked', true);
            }
        });
    }
    else {
        document.addEventListener("DOMContentLoaded", function (event) {
            $('.Activechecked').attr('checked', false);
        });
    }
</script>









