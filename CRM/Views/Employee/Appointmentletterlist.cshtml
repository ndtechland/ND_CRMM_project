@model IEnumerable<CRM.Models.DTO.Appointmentdetail>

@{
    ViewData["Title"] = "Appointmentdetail";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.12/css/dataTables.bootstrap.min.css">
<script src="https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.2.2/js/dataTables.buttons.min.js"></script>

<style>
    .dataTables_wrapper table.dataTable th {
        background-color: #00baf2 !important;
        padding: 24px 0.75rem !important;
    }
</style>
<style>
    .loader {
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border-top: 16px solid #3498db;
        width: 120px;
        height: 120px;
        animation: spin 2s linear infinite;
        position: fixed;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        z-index: 9999;
        display: none;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    /* Overlay style */
    .overlay {
        display: none;
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0);
        z-index: 9998;
    }

    /* Add blur to content when loader is active */
    .blurred {
        filter: blur(1px);
    }
</style>

<div class="page-wrapper" id="content">
    <div class="page-body-wrapper">
        <div class="page-sidebar">
        </div>
        <div class="page-body">
            <div class="container-fluid">
                <div class="page-header">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="page-header-left">
                                <h3>
                                    Appointment Letter List
                                </h3>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <ol class="breadcrumb pull-right">
                                <li class="breadcrumb-item"><a href="/Home/Dashboard"><i data-feather="home"></i></a></li>
                                <li class="breadcrumb-item">Letter</li>
                                <li class="breadcrumb-item active">Appointment Letter</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Container-fluid Ends-->
            <!-- Container-fluid starts-->
            <div class="container-fluid">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive" style="margin-top: 16px;">

                                    <table id="datatable" class="table table-hover">
                                        <thead>
                                            <tr style="background-color: #00baf2;">
                                                <th nowrap>
                                                    Sl. No.

                                                </th>

                                                <th nowrap>
                                                    Employee Name
                                                </th> 

                                                <th nowrap>
                                                    Employee ID
                                                </th>

                                                <th nowrap>
                                                    Date Of Joining
                                                </th>

                                                <th nowrap>
                                                    Work Email
                                                </th>
                                                <th nowrap>
                                                    Send Appointment Letter
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                var count = 0;
                                                @foreach (var item in Model)
                                                {
                                                    count++;
                                                    <tr class="table-row">
                                                        <td>@count</td>
                                                        <td nowrap>
                                                            <a href="/Employee/Appointmentletter?Id=@item.Id">@item.FirstName @item.MiddleName @item.LastName</a>

                                                        </td>
                                                        
                                                        <td nowrap>
                                                            @Html.DisplayFor(modelItem => item.Emp_Reg_ID)
                                                        </td>
                                                        <td nowrap>
                                                            @item.DateOfJoining.ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td nowrap>
                                                            @Html.DisplayFor(modelItem => item.WorkEmail)
                                                        </td>
                                                        <td>
                                                            <div>
                                                                <a href="javascript:void(0)"
                                                                   onclick="AppointmentletterdownloadPDF(@(item.Id))">
                                                                    <img src="@Url.Content("~/assets/images/layout-2/logo/email.png")"
                                                                         alt="PDF Icon" style="height: 60px; width: 60px;" />
                                                                </a>
                                                            </div>
                                                        </td>



                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="pagination-container">
                <ul id="pagination" class="pagination"></ul>
            </div>
        </div>
    </div>
</div>
<div class="overlay" id="overlay"></div>
<div class="loader" id="loader"></div>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script type="text/javascript">
    function showExperienceLetterAlert() {
        Swal.fire({
            icon: 'warning',
            title: 'No Appointment Letter Available',
            text: 'Please send the appointment letter via email after attempting to download.',
            confirmButtonText: 'OK'
        });
    }
</script>
<script type="text/javascript">
    function AppointmentletterdownloadPDF(id) {
        var url = '@Url.Action("AppointmentletterDocPDF", "Employee")' + '?Id=' + Id;

        // Show loader and apply blur
        document.getElementById('loader').style.display = 'block';
        document.getElementById('overlay').style.display = 'block';
        document.getElementById('content').classList.add('blurred');

        fetch(url, {
            method: 'GET',
            headers: {
                'Accept': 'application/json'
            }
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Hide the loader and overlay after success or failure
                document.getElementById('loader').style.display = 'none';
                document.getElementById('overlay').style.display = 'none';
                document.getElementById('content').classList.remove('blurred');

                if (data.success) {
                    Swal.fire({
                        title: 'Success',
                        text: data.message,
                        icon: 'success',
                        confirmButtonText: 'OK',
                        allowOutsideClick: false
                    }).then(() => {
                        window.location.reload(); // Reload after user confirms
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: data.message,
                        icon: 'error',
                        confirmButtonText: 'OK',
                        allowOutsideClick: false
                    });
                }
            })
            .catch(error => {
                // Hide the loader and overlay on error
                document.getElementById('loader').style.display = 'none';
                document.getElementById('overlay').style.display = 'none';
                document.getElementById('content').classList.remove('blurred');

                Swal.fire({
                    title: 'Error',
                    text: 'An error occurred while processing the request.',
                    icon: 'error',
                    confirmButtonText: 'OK',
                    allowOutsideClick: false
                });
            });
    }

</script>

<script>
    $(document).ready(function () {
        document.title = 'Appointmentdetail';
        $('#datatable').DataTable(
            {
                "dom": '<"dt-buttons"Bf><"clear">lirtp',
                "paging": true,
                "autoWidth": true,
                "buttons": [
                    'colvis',
                    'copyHtml5',
                    'csvHtml5',
                    'excelHtml5',
                    'pdfHtml5',
                    'print'
                ]
            }
        );
    });
</script>
<script type="text/javascript">
    function AppointmentletterdownloadPDF(Id) {
        var url = '@Url.Action("AppointmentletterDocPDF", "Employee")' + '?Id=' + Id;

        // Show loader and apply blur
        document.getElementById('loader').style.display = 'block';
        document.getElementById('overlay').style.display = 'block';
        document.getElementById('content').classList.add('blurred');

        fetch(url, {
            method: 'GET',
            headers: {
                'Accept': 'application/json'
            }
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Hide the loader and overlay after success or failure
                document.getElementById('loader').style.display = 'none';
                document.getElementById('overlay').style.display = 'none';
                document.getElementById('content').classList.remove('blurred');

                if (data.success) {
                    Swal.fire({
                        title: 'Success',
                        text: data.message,
                        icon: 'success',
                        confirmButtonText: 'OK',
                        allowOutsideClick: false
                    }).then(() => {
                        window.location.reload(); // Reload after user confirms
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: data.message,
                        icon: 'error',
                        confirmButtonText: 'OK',
                        allowOutsideClick: false
                    });
                }
            })
            .catch(error => {
                // Hide the loader and overlay on error
                document.getElementById('loader').style.display = 'none';
                document.getElementById('overlay').style.display = 'none';
                document.getElementById('content').classList.remove('blurred');

                Swal.fire({
                    title: 'Error',
                    text: 'An error occurred while processing the request.',
                    icon: 'error',
                    confirmButtonText: 'OK',
                    allowOutsideClick: false
                });
            });
    }

</script>