@model CRM.Models.DTO.SalarySlipDetails
@{
    ViewData["Title"] = "SalarySlip";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<html lang="en">
<head>
    <style>
        .buttons {
            text-align: center;
            margin-top: 50px;
        }

            .buttons button {
                margin: 50px;
            }

        @@page {
            size: A4;
            margin: 1mm auto;
            padding: 40px;
            height: max-content;
        }
    </style>
</head>
<body>
    <div class="buttons">
        <button class="btn btn-primary" onclick="prepareForPrint()">Print</button>
        <button onclick="history.back()" class="btn btn-secondary">Back to List</button>
    </div>
    @if (Model != null)
    {
        <div class="container mt-5 mb-5">
            <div class="row" style="margin-top: 50px;">
                <div class="col-md-12">
                    <div class="text-center lh-1 mb-2">
                        <img src="~/CompanyImage/@Model.CompanyImage" style="width: 150px;height: 100px;" />
                        <h4 class="fw-bold"><b>@Model.CompanyName</b></h4> <span class="fw-normal"><b>Payment slip for the month of @Model.Month  @Model.Year</b></span>
                    </div>
                    <div class="d-flex justify-content-end"> <span><b>Working Branch:</b>@Model.Address_Line_1</span> </div>
                    <div class="row">
                        <div class="col-md-10">
                            <div class="row">
                                <div class="col-md-6">
                                    <div> <span class="fw-bolder"><b>EMP Code:</b></span> <small class="ms-3">@Model.Employee_ID</small> </div>
                                </div>
                                <div class="col-md-6">
                                    <div> <span class="fw-bolder"><b>EMP Name:</b></span> <small class="ms-3">@Model.First_Name</small> </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div> <span class="fw-bolder"><b>PF No:</b></span> <small class="ms-3">@Model.EPF_Number</small> </div>
                                </div>
                                <div class="col-md-6">
                                    <div> <span class="fw-bolder"><b>NOD:</b></span> <small class="ms-3">@Model.Id</small> </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div> <span class="fw-bolder"><b>ESI No:</b></span> <small class="ms-3"></small> </div>
                                </div>
                                <div class="col-md-6">
                                    <div> <span class="fw-bolder"><b>Mode of Pay:</b></span> <small class="ms-3">@Model.Bank_Name</small> </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div> <span class="fw-bolder"><b>Designation:</b></span> <small class="ms-3">@Model.Designation_Name</small> </div>
                                </div>
                                <div class="col-md-6">
                                    <div>
                                        <span class="fw-bolder"><b>Ac No:</b></span>
                                        <small class="ms-3" id="accountNumber">@Model.Account_Number</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <table class="mt-4 table table-bordered" style="width: 100%;">
                            <thead class="bg-dark text-white">
                                <tr style="background-color: #173564;">
                                    <th scope="col">Earnings</th>
                                    <th scope="col">Amount</th>
                                    <th scope="col">Deductions</th>
                                    <th scope="col">Amount</th>
                                </tr>
                            </thead>

                            <tbody>
                                <tr>
                                    <th scope="row">Basic</th>
                                    <td>@(Model.Basic ?? 0)</td>
                                    <th scope="row">PF</th>
                                    <td>@(Model.Epf ?? 0)</td>
                                </tr>
                                <tr>
                                    <th scope="row">HRA</th>
                                    <td>@(Model.HouseRentAllowance ?? 0)</td>
                                    <th scope="row">ESI</th>
                                    <td>@(Model.Esic ?? 0)</td>

                                </tr>
                                <tr>
                                    <th scope="row">Special Allowance</th>
                                    <td>@(Model.SpecialAllowance ?? 0)</td>
                                    <th scope="row">TDS</th>
                                    <td>@(Model.Amount ?? 0)</td>

                                </tr>
                                <tr>
                                    <th scope="row">Conveyance Allowance</th>
                                    <td>@(Model.Conveyanceallowance ?? 0)</td>
                                    <th>LOP</th>
                                    <td>@(Model.Lop ?? 0)</td>
                                </tr>
                                <tr>
                                    <th>Variable Pay</th>
                                    <td>@(Model.VariablePay ?? 0)</td>
                                    <th> Medical Allowance</th>
                                    <td>@(Model.MA ?? 0)</td>
                                </tr>
                                <tr>
                                    <th>TA</th>
                                    <td>@(Model.TravellingAllowance ?? 0)</td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>Incentive Pay</th>
                                    <td>@(Model.Incentive ?? 0)</td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr class="border-top">
                                    <th scope="row">Total Earning</th>
                                    <td>
                                        @{
                                            decimal totalEarning = (Model.Basic ?? 0m) +
                                            (Model.HouseRentAllowance ?? 0m) +
                                            (Model.SpecialAllowance ?? 0m) +
                                            (Model.Conveyanceallowance ?? 0m) +
                                            (Model.VariablePay ?? 0m);

                                            @totalEarning
                                        }
                                    </td>

                                    <th>Total Deductions</th>
                                    <td>
                                        @{
                                            decimal totaldeductions = (Model.Epf ?? 0m) +
                                            (Model.Esic ?? 0m) +
                                            (Model.Amount ?? 0m) +
                                            (Model.Lop ?? 0m) + (Model.MA ?? 0m);

                                            @totaldeductions
                                        }
                                    </td>

                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <br>
                            <span id="totalAmount"><b>Net Pay:</b> @(totalEarning - totaldeductions)</span>
                        </div>
                    </div>
                    <div id="result"></div>

                    <div class="d-flex justify-content-end">
                        <div class="d-flex flex-column mt-2">
                            <span class="fw-bolder">@Model.CompanyName</span>
                            <span class="mt-4">Authorised Signatory</span>
                            @*                             <img src="~/assets/images/layout-2/logo/signature.png" alt="Signature Image" />*@
                            <img src="~/CompanyImage/@Model.Companysignature" alt="Signature Image" style="height: 82px;width: 185px;" />

                        </div>
                    </div>

                </div>
            </div>
        </div>
    }
    else
    {
        <script>alert('No data found.');</script>
    }

</body>
</html>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script>
    window.onload = function () {
        var accountNumberElement = document.getElementById("accountNumber");
        if (accountNumberElement) {
            var accountNumber = accountNumberElement.innerText;

            // Replace the actual account number with "********" followed by the last four digits
            var maskedAccountNumber = "********" + accountNumber.slice(-4);

            // Update the content of the element
            accountNumberElement.innerText = maskedAccountNumber;
        }
    };
</script>
<script>
    function inWords(num) {
        var units = ['Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'];
        var teens = ['Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];
        var tens = ['', 'Ten', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];

        function convertLessThanThousand(number) {
            if (number === 0) {
                return '';
            } else if (number < 10) {
                return units[number] + ' ';
            } else if (number < 20) {
                return teens[number - 11] + ' ';
            } else if (number < 100) {
                return tens[Math.floor(number / 10)] + ' ' + convertLessThanThousand(number % 10);
            } else {
                return units[Math.floor(number / 100)] + ' Hundred ' + convertLessThanThousand(number % 100);
            }
        }

        if (num === 0) {
            return 'Zero Only';
        } else {
            var result = '';
            if (num < 0) {
                result += 'Negative ';
                num = Math.abs(num);
            }

            if (num >= 1000000) {
                result += convertLessThanThousand(Math.floor(num / 1000000)) + ' Million ';
                num %= 1000000;
            }

            if (num >= 1000) {
                result += convertLessThanThousand(Math.floor(num / 1000)) + ' Thousand ';
                num %= 1000;
            }

            result += convertLessThanThousand(Math.floor(num));

            var decimalPart = '';
            if (num % 1 !== 0) {
                decimalPart = ' Point ';
                var decimal = num.toFixed(2).toString().split('.')[1].replace(/^0+/, '');
                for (var i = 0; i < decimal.length; i++) {
                    decimalPart += units[parseInt(decimal[i])] + ' ';
                }
                decimalPart += 'Only.';
            }

            return (result + decimalPart).trim();
        }
    }
    var totalAmountText = document.getElementById('totalAmount').innerText;
    var number = parseFloat(totalAmountText.split(' ')[2]);
    if (!isNaN(number)) {
        var words = inWords(number);
        document.getElementById('result').innerHTML = 'Net Pay (In words): ' + words;
    } else {
        document.getElementById('result').innerHTML = 'Invalid numeric value';
    }
</script>

<script>
    function prepareForPrint() {
        const elementsToHide = ['.buttons', '.page-body-wrapper', '.page-main-header', '.page-sidebar'];

        elementsToHide.forEach(selector => {
            const element = document.querySelector(selector);
            if (element) {
                console.log(`Hiding element for print: ${selector}`);
                element.style.display = 'none';
            } else {
                console.log(`Element not found for print: ${selector}`);
            }
        });

        const printStyle = document.createElement('style');
        printStyle.type = 'text/css';
        printStyle.media = 'print';
        printStyle.innerHTML = `
                                                        @@page {
                                                            size: A4;
                                                            margin: 10mm;
                                                            padding: 20px;
                                                        }
                                                        body {
                                                            margin: 0;
                                                            padding: 0;
                                                        }
                                                    `;
        document.head.appendChild(printStyle);
        window.print();

        setTimeout(() => {
            elementsToHide.forEach(selector => {
                const element = document.querySelector(selector);
                if (element) {
                    console.log(`Restoring element: ${selector}`);
                    element.style.display = '';
                }
            });

            if (printStyle.parentNode) {
                document.head.removeChild(printStyle);
            }
        }, 500);
    }

    document.addEventListener('keydown', function (event) {
        if (event.ctrlKey && event.key === 'p') {
            event.preventDefault();
            prepareForPrint();
        }
    });

</script>
