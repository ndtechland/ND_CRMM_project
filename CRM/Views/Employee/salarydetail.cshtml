@model IEnumerable<CRM.Models.DTO.salarydetail>


@{
    ViewData["Title"] = "salarydetail";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
@if (ViewBag.Message != null)
{
    <script>alert('@ViewBag.Message');</script>
}
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<style>
    .button {
        width: 124px;
        margin-left: 0px;
        height: 38px;
        margin-top: 33px;
    }
</style>

<style>
    .se-pre-con {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 100001;
        background: url('../assets/images/layout-2/logo/loddergif.gif') center no-repeat transparent;
        background-color: #0f0e0e;
        opacity: 0.5;
    }
</style>



<div class="page-wrapper">
    <div class="page-body-wrapper">
        <div class="page-sidebar">
        </div>

        <div class="page-body">
            <div id="dvloader" class="se-pre-con" style="display:none"></div>

            <div class="container-fluid">
                <div class="page-header">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="page-header-left">
                                <h3>
                                    Salary detail List
                                </h3>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <ol class="breadcrumb pull-right">
                                <li class="breadcrumb-item"><a href="/Home/Dashboard"><i data-feather="home"></i></a></li>
                                <li class="breadcrumb-item">HR Payrole</li>
                                <li class="breadcrumb-item active">Employee</li>
                                <li class="breadcrumb-item active">Salarydetail list</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>

            <div class="container-fluid">
                <div class="row">

                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-body">

                                <form asp-action="salarydetail" autocomplete="off" method="get">

                                    <div class="row">
                                        <div class="form-group col-md-3">
                                            <label for="validationCustom0">Company Name</label>
                                            <select class="form-control" id="CustomerID" name="CustomerID" onchange="Locations()">
                                                <option value="">-- Select Company --</option>

                                                @foreach (var item in ViewBag.CustomerName)
                                                {
                                                    <option value="@item.Value">@item.Text</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="form-group col-md-3">
                                            <label for="validationCustom0">Work Location</label>
                                            <select class="form-control" id="LocationID" name="WorkLocation">
                                                <option value="">--Select WorkLocation--</option>

                                            </select>
                                        </div>
                                        <div class="form-button col-md-3" style="display:flex; justify-content:center;">
                                            <input type="submit" value="Search" class="btn btn-primary button" id="sbtn" onclick="return validateForm();" />
                                        </div>

                                    </div>

                                </form>
                                <div class=" table-responsive">
                                    @if (Model != null && Model.Any())
                                    {
                                        <div style="text-align: right;">
                                            <button type="button" class="btn btn-primary" id="downloadButton" style="color: black; border: 2px solid black;" onclick="ESCExcelfn()">
                                                ECS
                                            </button>
                                            <button type="submit" class="btn btn-primary" id="myButton" style="color: black; border: 2px solid black;" onclick="gensal();">
                                                <i class="fa fa-plus"></i> Generate Salary
                                            </button>
                                            
                                        </div>
                                        <br />
                                        <table id="datatable" class="table table-responsive">
                                            <thead>
                                                <tr style="background-color: #00baf2;">
                                                    <th hidden>
                                                        ID
                                                    </th>
                                                    <th nowrap>Sl. No.</th>
                                                    <th nowrap>
                                                        Employee Name
                                                    </th>
                                                    <th nowrap>
                                                        Father Name
                                                    </th>
                                                    <th nowrap>
                                                        Employee Id
                                                    </th>
                                                    <th nowrap>
                                                        Monthly CTC
                                                    </th>
                                                    
                                                    <th nowrap>Attendance</th>
                                                    <th nowrap>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @{
                                                    var count = 0;

                                                            @foreach (var item in Model)
                                                    {
                                                        count++;
                                                                <tr class="table-row">
                                                                    <td>@count</td>
                                                                    <td style="display:none">
                                                                        @item.Id
                                                                    </td>
                                                                      <td style="display:none">
                                                                        @item.CustomerID
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.FirstName)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.FatherName)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.EmployeeId)
                                                                    </td>
                                                                <td style="display:none" id="hiddenIncentive">
                                                                    @item.Incentive
                                                                </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.MonthlyCtc)
                                                                    </td>
                                                                    <td>
                                                                        <input type="text" id="Attendance" name="Attendance" class="form-control attnd" minlength="1" maxlength="2" style="height: 40px; width: 94px;" onkeyup="fnc(this)" />
                                                                    </td>
                                                                    <td>
                                                                        <a href="#" class="fa fa-edit m-2 font-success" data-bs-toggle="modal" data-bs-target="#staticBackdrop" onclick="EditSalaryDetails('@item.EmployeeId')">
                                                                            Edit Salary
                                                                        </a>
                                                                    </td>


                                                                </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    }
                                    else
                                    {
                                        <script>alert('No salary details found.');</script>
                                    }
                                </div>
                                @if (Model != null && Model.Any())
                                {
                                    <div class="row">
                                        <div class="col-md-8">
                                            <label class="form-group">Total Monthly CTC</label>
                                        </div>
                                        <div class="col-md-4">
                                            <input type="text" id="TotalAmount" value="@ViewBag.TotalAmmount" class="form-group" style="border: none;margin-left: -62px;" readonly />
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="pagination-container">
                <ul id="pagination" class="pagination"></ul>
            </div>
        </div>


    </div>

</div>
<input hidden type="text" id="custid" value="@Context.Session.GetString("custid")" />
<input hidden type="text" id="locid" value="@Context.Session.GetString("locid")" />

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    function ESCExcelfn() {
        var customerId = document.getElementById("CustomerID").value;
        var workLocation = document.getElementById("LocationID").value;
        if (customerId === '') {
            alert("Please select Company.");
            return false;
        }
        if (workLocation === '') {
            alert("Please select WorkLocation.");
            return false;
        }
        window.location.href = '/Employee/ESCDownloadExcel?customerId=' + customerId + '&WorkLocation=' + workLocation;
    }
    function gensal() {
        var check = true;
        var tbody = $("#datatable tbody");
        if (tbody.children().length > 0) {
            var modeldata = new Array;
            $('#datatable tbody tr').each(function (index) {
                var customer = {};
                customer.Id = $(this).find('td:eq(1)').text().trim();
                customer.CustomerID = $(this).find('td:eq(2)').text().trim();
                customer.FatherName = $(this).find('td:eq(4)').text().trim();
                customer.EmployeeId = $(this).find('td:eq(5)').text().trim();
                customer.Incentive = $(this).find('td:eq(6)').text().trim();
                customer.Attendance = $(this).find('input[name="Attendance"]').val();
                if (customer.Attendance === "") {
                    alert("Please fill in all Attendance fields.");
                    check = false;
                    return false;
                }
                modeldata.push(customer);
            });

            ///
            if (check == true) {
                $.ajax({

                    url: '/Employee/Empattendance',
                    data: { customers: modeldata },
                    //data: { 'id': id, 'Attendance': atten },
                    dataType: 'json',
                    type: 'post',
                    async: 'false',

                    success: function (data) {
                        if (data.data == true) {
                            $(".attnd").val("");
                            alert("Your salary already genrated for this month");
                            return false;
                        }

                        if ((tbody.children().length) == @Model.Count()) {
                            $(".attnd").val("");
                            //location.reload();
                            alert("Data saved successfully.");
                        }
                        debugger;
                    },

                    error: function (err) {

                    }
                });
            }
        }
        else {

            return false;

        }
    }
    $(function () {
        $("input[name='Attendance']").on('input', function (e) {
            $(this).val($(this).val().replace(/[^0-9]/g, ''));
        });
    });
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script type="text/javascript">
    function fnc(inputElement) {
        var value = inputElement.value;

        if (parseInt(value) < 0 || isNaN(value)) {
            inputElement.value = '';
        } else if (parseInt(value) > 25) {
            alert("Number is greater than 25");
            inputElement.value = '';
        }
    }
</script>

<script>
    $(document).ready(function () {
        $("#CustomerID").val($("#custid").val());
        $("#LocationID").val($("#locid").val());
        Locations();
    });
    function Locations() {
        var customerId = $("#CustomerID").val();
        if (customerId !== "") {
            $.ajax({
                url: '/Employee/GetLocationsByCustomer?customerId=' + customerId,
                type: "post",
                success: function (response) {
                    populateLocations(response);
                },
                error: function (error) {
                    console.error("Error loading locations: " + error);
                }
            });
        } else {
            $("#LocationID").empty();
            $("#LocationID").append('<option value="">--Select WorkLocation--</option>');
        }
    }

    function populateLocations(response) {
        $("#LocationID").empty();
        $("#LocationID").append('<option value="">--Select WorkLocation--</option>');


        $.each(response, function (i, response) {
            $("#LocationID").append('<option value="' + response.text + '">' + response.value + '</option>');
        });
        var locId = $("#locid").val();
        if (locId !== "") {
            $("#LocationID").val(locId);
        }
    }
</script>
<script>
    function validateForm() {
        var CustomerID = document.getElementById('CustomerID').value;
        var WorkLocation = document.getElementById('LocationID').value;

        if (CustomerID === '') {
            alert("Please select Company.");
            return false;
        }
        if (WorkLocation === '') {
            alert("Please select WorkLocation.");
            return false;
        }
    }
</script>

<script type="text/javascript">

    $(document).ajaxStart(function () {
        $("#dvloader").css("display", "block");
    });

    $(document).ajaxStop(function () {
        $(".se-pre-con").fadeOut("slow");

    });
    $(document).ajaxError(function () {
        $(".se-pre-con").fadeOut("slow");

    });
</script>

<script>
    function EditSalaryDetails(EmployeeId) {
        debugger;
        $.ajax({
            url: '/Employee/EditSalaryDetails?EmployeeId=' + EmployeeId,
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                $('#Employee').val(response.empSalaryDetail.employeeId);
                $('#txtAnnualCTC').val(response.empSalaryDetail.annualCtc);
                $('#TravellingAllowance').val(response.empSalaryDetail.travellingAllowance);
                $('#ESIC').val(response.empSalaryDetail.esic);
                $('#Professionaltax').val(response.empSalaryDetail.professionaltax);
                $('#txtBasicSalary').val(response.empSalaryDetail.basic);
                $('#txtHouseRentAllowance').val(response.empSalaryDetail.houseRentAllowance);
                $('#txtMonthlyCTC').val(response.empSalaryDetail.monthlyCtc);
                $('#txtMonthlyGrossPay').val(response.empSalaryDetail.monthlyGrossPay);
                $('#txtEPF').val(response.empSalaryDetail.epf);
                $('#txtIncentive').val(response.empSalaryDetail.incentive);
                $('#txtTravellingAllowance').val(response.empSalaryDetail.travellingAllowance);
                $('#hiddenIncentive').text(response.empSalaryDetail.incentive);
                $('#staticBackdrop').modal('show');

            },
            error: function () {
                alert('Data not found');
            }
        });
    }
</script>
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Edit Salary Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <form action="EditSalaryDetails" method="post" autocomplete="off">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input name="EmployeeId" type="text" id="Employee" style="display:none">

                            <div class="row">
                                <div class="col">
                                    <label>Annual CTC</label>
                                    <input class="form-control " name="AnnualCTC" id="txtAnnualCTC" type="text" required>
                                </div>
                                <div class="col">
                                    <label>Travelling Allowance</label>
                                    <input class="form-control "  name="TravellingAllowance" id="TravellingAllowance" type="text" required="">
                                </div>                               
                            </div>
                            <div class="row">
                              <div class="col">
                                    <label>ESIC</label>
                                    <input class="form-control " name="ESIC" id="ESIC" type="text" required="" readonly>
                                </div>
                                <div class="col">
                                    <label>Professional tax</label>
                                    <input class="form-control " name="Professionaltax" id="Professionaltax" type="text" required="" readonly>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label>Basic</label>
                                    <input class="form-control "  name="Basic" placeholder="00.0" id="txtBasicSalary" type="text" required="" readonly>
                                </div>
                                <div class="col">
                                    <label>HouseRent Allowance</label>
                                    <input class="form-control "  name="HouseRentAllowance" placeholder="00.0" id="txtHouseRentAllowance" type="text" required="" readonly>
                                </div>                               
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label>EPF</label>
                                    <input class="form-control "  name="EPF" placeholder="00.0" id="txtEPF" type="text" required="" readonly>
                                </div>
                                <div class="col">
                                    <label>Monthly CTC</label>
                                    <input class="form-control "  name="MonthlyCTC" placeholder="00.0" id="txtMonthlyCTC" type="text" required="" readonly>
                                </div>
                            </div>
                            <div class="row">
                               
                                <div class="col">
                                    <label>Monthly GrossPay</label>
                                    <input class="form-control " name="MonthlyGrossPay" placeholder="00.0" id="txtMonthlyGrossPay" type="text" required="" readonly>
                                </div>
                                <div class="col">
                                    <label>Incentive / Advance </label>
                                    <input class="form-control " name="Incentive" placeholder="00.0" id="txtIncentive" type="text" required="">
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <label>Travelling Allowance </label>
                                    <input class="form-control " name="TravellingAllowance" placeholder="00.0" id="txtTravellingAllowance" type="text" required="">
                                </div>

                            </div>
                            <div style="margin-top: 15px">
                                 <button class="btn btn-warning" id="btnUpdate">Update</button>
                                 <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                            </div>
                           

                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Get the annual salary input element
        var annualSalaryInput = $('#txtAnnualCTC');

        // Get the monthly salary input element
        var monthlySalaryInput = $('#txtMonthlyCTC');
        var basicSalaryInput = $('#txtBasicSalary');
        var basicSalaryInput = $('#txtBasicSalary');
        var HouseRentAllowanceInput = $('#txtHouseRentAllowance');
        var EPFInput = $('#txtEPF');
        var MonthlyGrossPayInput = $('#txtMonthlyGrossPay');
        var ESICInput = $('#ESIC');
        var ProfessionaltaxInput = $('#Professionaltax');

        // Attach an input event listener to the annual salary input
        annualSalaryInput.on('input', function () {
            // Get the value from the annual salary input
            var annualSalary = parseFloat($(this).val());

            // Check if the entered value is a valid number
            if (!isNaN(annualSalary)) {
                // Calculate monthly salary (assuming 12 months in a year)
                var monthlySalary = annualSalary / 12;
                var basicSalary = annualSalary / 2;
                var houseRent = basicSalary / 2;
                var EPFCalculation = monthlySalary * 12 / 100;
                var MonthlyGross = monthlySalary - EPFCalculation;
                var ESIC = monthlySalary * 0.75 / 100;
                var professionaltax;
                switch (true) {
                    case monthlySalary < 2001:
                        professionaltax = 200;
                        break;
                    case monthlySalary < 15001:
                        professionaltax = 0;
                        break;
                    case monthlySalary > 15000:
                        professionaltax = 150;
                        break;
                    default:
                        professionaltax = 0;
                }

                // Update the value of the monthly salary input
                monthlySalaryInput.val(monthlySalary.toFixed(2));
                basicSalaryInput.val(basicSalary.toFixed(2));
                HouseRentAllowanceInput.val(houseRent.toFixed(2));
                EPFInput.val(EPFCalculation.toFixed(2));
                MonthlyGrossPayInput.val(MonthlyGross.toFixed(2));
                ESICInput.val(ESIC.toFixed(2));
                ProfessionaltaxInput.val(professionaltax.toFixed(2));                
            } else {
                // If the entered value is not a valid number, clear the monthly salary input
                monthlySalaryInput.val('');
                basicSalaryInput.val('');
                HouseRentAllowanceInput.val('');
                EPFInput.val('');
                MonthlyGrossPayInput.val('');
                ESICInput.val('');
                ProfessionaltaxInput.val('');
            }
        });
    });
</script>
<script>
    var currentPage = 1;
    var rowsPerPage = 10;
    $(document).ready(function () {
        function paginateTable() {
            var table = $('#datatable');
            var rows = table.find('tbody tr');


            var totalPages = Math.ceil(rows.length / rowsPerPage);


            var pagination = $('#pagination');
            pagination.empty();

            for (var i = 1; i <= totalPages; i++) {
                var link = $('<li class="page-item"><a class="page-link" href="#">' + i + '</a></li>');


                if (i === currentPage) {
                    link.addClass('active');
                }

                pagination.append(link);
            }


            var startIndex = (currentPage - 1) * rowsPerPage;
            var endIndex = startIndex + rowsPerPage;

            rows.hide().slice(startIndex, endIndex).show();
        }


        paginateTable();

        $(document).on('click', '#pagination li a', function (event) {
            event.preventDefault();

            var clickedPage = parseInt($(this).text());


            currentPage = clickedPage;
            paginateTable();


            $('html, body').animate({ scrollTop: $('#table-container').offset().top }, 'slow');
        });
    });

</script>
